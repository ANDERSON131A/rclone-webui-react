{"version":3,"sources":["utils/API/API.js","utils/Tools.js","ErrorHandling/ErrorBoundary.js","actions/types.js","utils/Constants.js","polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/providerStatusReducer.js","reducers/userActionsReducer.js","reducers/imagesReducer.js","reducers/index.js","utils/StateLoader.js","throttled.js","store.js","index.js"],"names":["axiosInstance","axios","create","headers","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","Name","IsDir","performCopyOrMoveFile","performCopyFile","_callee","mode","url","splitRes","data","_data","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","isLocalRemoteName","split","length","_async","console","log","post","abrupt","sent","stop","interceptors","request","use","config","baseURL","localStorage","getItem","IP_ADDRESS_KEY","Authorization","btoa","USER_NAME_KEY","PASSWORD_KEY","error","Promise","reject","isEmpty","obj","Array","isArray","key","hasOwnProperty","bytesToKB","bytes","bytesToGB","formatBytes","decimals","arguments","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","name","find","ele","idx","array","Prefix","addColonAtLast","indexOf","__webpack_require__","d","__webpack_exports__","changeListVisibility","changeSearchFilter","visibilityAssociation","Images","Pdf","list","filter","acceptType","item","MimeType","searchQuery","toLowerCase","startsWith","remoteName","ErrorBoundary","props","_this","Object","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","hasError","info","setState","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","fluid","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","lg","sm","href","children","React","Component","FETCH_STATUS","GET_PROVIDERS","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_CONFIG_DUMP","GET_FILES_LIST","CHANGE_PATH","CREATE_PATH","CHANGE_REMOTE_NAME","CHANGE_REMOTE_PATH","NAVIGATE_UP","NAVIGATE_FWD","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","SIGNOUT_REQUEST","CHANGE_SEARCH_QUERY","GET_REMOTE_ABOUT","SET_BANDWIDTH","GET_BANDWIDTH","ENABLE_STATUS_CHECK","CHANGE_USER_NAME_PASSWORD","CHANGE_IP_ADDRESS","CHANGE_AXIOS_INTERCEPTOR","CHANGE_LOAD_IMAGES","LOAD_IMAGE","CHANGE_LAYOUT_COLS","CHANGE_DISTRACTION_FREE_MODE","REQUEST_ERROR","REQUEST_SUCCESS","REQUEST_LOADING","visibilityFilteringOptions","STATUS_REFRESH_TIMEOUT","NEW_DRIVE_CONFIG_REFRESH_TIMEOUT","MODAL_ROOT_ELEMENT","FILES_VIEW_HEIGHT","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","lazy","all","e","then","bind","Login","Register","Page404","Page500","App","react_default","data-test","react_toastify","react_router_dom","Suspense","fallback","react_router","exact","path","render","Boolean","location","hostname","match","initialState","isConnected","jobs","speed","runningAvgSpeed","checkStatus","bandwidth","providers","configDump","configs","remotes","files","numCols","distractionFreeMode","Stack","items","count","classCallCheck","remotePath","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","loadImages","about","auth","userName","password","ipAddress","interceptor","appReducer","combineReducers","status","action","type","curSpeed","payload","cma","totalElements","objectSpread","concat","toConsumableArray","elapsedTime","speedAvg","remote","defineProperty","time","Date","filesList","explorer","id","visibilityFilter","current","splitPath","moveForward","providerStatus","user","setItem","eject","interceptorID","imageLoader","_action$payload","save","isLoading","rootReducer","clear","StateLoader","createClass","value","serializedState","initializeState","JSON","parse","err","newState","stringify","Error","throttled","middleware","thunk","_ref","getState","dispatch","meta","throttle","setTimeout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","apply","subscribe","saveState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54cbb783.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\nimport {IP_ADDRESS_KEY, PASSWORD_KEY, USER_NAME_KEY} from \"../Constants\";\n\n/**\n * Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\n */\nlet axiosInstance = axios.create({\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n/**\n * Interceptor adds basic authentication to every axios request.\n */\naxiosInstance.interceptors.request.use(\n    config => {\n        config.baseURL = localStorage.getItem(IP_ADDRESS_KEY);\n        config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem(USER_NAME_KEY) + \":\" + localStorage.getItem(PASSWORD_KEY));\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = \"/sync/move\";\n        } else {\n            url = \"/operations/movefile\";\n        }\n    } else {\n        if (IsDir) {\n            url = \"/sync/copy\";\n        } else {\n            url = \"/operations/copyfile\";\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        const data = {\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n            _async: true\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        const data = {\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n            _async: true\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\nexport default axiosInstance;\n","/**\n * Returns whether the passed in object (obj) is empty or it contains some entries.\n * @param obj {$ObjMap} An object to check if it is empty: it can be an array or a map.\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts bytes into MB.\n * @param bytes {number} bytes to be converted.\n * @returns {number}\n */\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes to KB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\n/**\n * Converts bytes to GB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes per second to Megabytes per second.\n * @param bps {number} bytes per second.\n * @returns {number}\n */\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\n/**\n * Format bytes to a human readable format.\n * @param bytes {number} bytes to be formatted.\n * @param decimals {number} specifies the precision of numbers after the decimal point.\n * @returns {string}\n */\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Converts time in seconds to a minute and hour string of the format \"HH:MM:SS hrs\"\n * @param seconds {number} Number of seconds since 00:00:00\n * @returns {string}\n */\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\n/**\n * Converts seconds to a human readable string with support for year, day, week, minute, seconds.\n * @param seconds\n * @returns {string}\n */\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\n/**\n * Base validator takes in a regex exp and tests an input str against that regex.\n * @param regex\n * @param str\n * @returns {boolean | * | never}\n */\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n/**\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\n * @param str {string} String to be validated\n * @returns {boolean|*|never}\n */\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate integer without decimal points (0-9)\n * @param str {number|string} The string to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate duration hours, minutes, seconds, milliseconds etc.\n * @param str {number|string} The duration to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\n/**\n * Opens the specified URL in a new tab and focus on it.\n * @param url {string} URL to be opened.\n */\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/**\n * Helper function for finding the provider with a given prefix.\n * @param config {$ObjMap} Array of remote configs\n * @param name {string} Specifies the name of the provider to find.\n * @returns {*}\n */\n\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\n\n/**\n * Helper function to add semicolon to the last.\n * Behaviour: if the passed in string does not have a semicolon at last, then insert it.\n * If there is a semicolon in the middle, skip insertion.\n * @param name\n * @returns {string}\n */\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\n/**\n * Allowed types for visibility Status modification in file explorer.\n * @type {{Pdf: string, Images: string}}\n */\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n/**\n * Function to filter the list of files based on the provided visibility status.\n * @param list {$ObjMap}\n * @param filter {string} Specifies the type of files to display eg: Images, Pdf etc.\n * @param checkList {$ObjMap} Provides mimeType matches for every string visibility operation eg: Images: \"image/jpeg\"\n * @returns {$ObjMap}\n */\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Function to filter the list of files based on the provided search query.\n * Uses linear search for filtering the relevant files.\n * @param list\n * @param searchQuery\n * @returns {*}\n */\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Checks whether the remoteName is local or not. Returns true if it is a remote local path, false otherwise.\n * Behaviour: if the name starts with \"/\" it is a local name.\n * @param remoteName {string} Name of the remote to check for.\n * @returns {boolean}\n */\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}\n","import React from \"react\";\nimport {Col, Container, Row} from \"reactstrap\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n        // Send error to Rclone backend.\n        this.setState({error, info});\n\n\n        console.log(\"Hey\");\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return (\n                <div className=\"d-flex align-items-center\">\n                    <Container fluid={true}>\n                        <Row>\n                            <Col lg={3} sm={12}/>\n                            <Col lg={6} sm={12}>\n                                <h3>Something went wrong. </h3>\n                                <Row>\n                                    <Col>\n                                        Try refreshing the page.\n                                        If the issue persists, please consider opening a new issue on our Github page.\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <a href=\"https://github.com/negative0/rclone-webui-react/issues\"\n                                           className=\"btn btn-primary\">\n                                            Create new Issue.\n                                        </a>\n                                    </Col>\n                                </Row>\n\n                            </Col>\n                            <Col lg={3} sm={12}/>\n                        </Row>\n                    </Container>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export const FETCH_STATUS = 'FETCH_STATUS';\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\nexport const CHANGE_PATH = 'CHANGE_PATH';\nexport const CREATE_PATH = 'CREATE_PATH';\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const GET_REMOTE_ABOUT = 'GET_REMOTE_ABOUT';\nexport const CREATE_PUBLIC_LINK = 'CREATE_PUBLIC_LINK';\nexport const GET_RUNNING_JOBS = 'GET_RUNNING_JOBS';\nexport const GET_STATUS_FOR_RUNNING_JOB = 'GET_STATUS_FOR_RUNNING_JOB';\nexport const SET_BANDWIDTH = 'SET_BANDWIDTH';\nexport const GET_BANDWIDTH = 'GET_BANDWIDTH';\nexport const ENABLE_STATUS_CHECK = 'ENABLE_STATUS_CHECK';\nexport const CHANGE_USER_NAME_PASSWORD = 'CHANGE_USER_NAME_PASSWORD';\nexport const CHANGE_IP_ADDRESS = 'CHANGE_IP_ADDRESS';\nexport const CHANGE_AXIOS_INTERCEPTOR = 'CHANGE_AXIOS_INTERCEPTOR';\nexport const CHANGE_LOAD_IMAGES = 'CHANGE_LOAD_IMAGES';\nexport const LOAD_IMAGE = 'LOAD_IMAGE';\nexport const CHANGE_LAYOUT_COLS = 'CHANGE_LAYOUT_COLS';\nexport const CHANGE_DISTRACTION_FREE_MODE = \"CHANGE_DISTRACTION_FREE_MODE\";\n\n\nexport const REQUEST_ERROR = 'ERROR';\nexport const REQUEST_SUCCESS = 'SUCCESS';\nexport const REQUEST_LOADING = 'LOADING';\n","/**\n * Returns a string array with possible filtering options.\n * @type {string[]}\n */\nexport const visibilityFilteringOptions = [\"Images\", \"Pdf\", \"Videos\"];\n\n/**\n * Refresh timeout for checking backend status.\n * In milliseconds.\n * @type {number}\n */\nexport const STATUS_REFRESH_TIMEOUT = 1000 * 5;\n/**\n * Refresh timeout for checking if the config is created.\n * In milliseconds.\n * @type {number}\n */\nexport const NEW_DRIVE_CONFIG_REFRESH_TIMEOUT = 1000;\nexport const MODAL_ROOT_ELEMENT = \"modal-root\";\n\nexport const USER_NAME_KEY = \"userName\";\nexport const PASSWORD_KEY = \"password\";\nexport const IP_ADDRESS_KEY = \"ipAddress\";\n\nexport const FILES_VIEW_HEIGHT = \"75vh\";","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es/set'\nimport 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ErrorBoundary from \"./ErrorHandling/ErrorBoundary\";\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div data-test=\"appComponent\">\n                <ErrorBoundary>\n                    <ToastContainer/>\n                    <HashRouter>\n                        <React.Suspense fallback={loading()}>\n                            <Switch>\n                                <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\n                                <Route exact path=\"/register\" name=\"Register Page\"\n                                       render={props => <Register {...props}/>}/>\n                                <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\n                                <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\n                                <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\n                            </Switch>\n                        </React.Suspense>\n                    </HashRouter>\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {\n    ENABLE_STATUS_CHECK,\n    FETCH_STATUS,\n    GET_BANDWIDTH,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS,\n    SET_BANDWIDTH\n} from \"../actions/types\";\n\nconst initialState = {\n    isConnected: false,\n    jobs: {},\n    speed: [],\n    runningAvgSpeed: 0,\n    checkStatus: true,\n    bandwidth: {}\n};\n/**\n * Specifies reducers for status check of the rclone backend.\n * @param state\n * @param action\n * @returns {({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{isConnected: boolean, error: *})|{checkStatus: boolean, bandwidth: {}, jobs: {}, isConnected: boolean, runningAvgSpeed: number, speed: Array}|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{bandwidth: *})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{jobs: *, isConnected: boolean, runningAvgSpeed: number, speed: *[]})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{checkStatus: *})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_STATUS:\n\n            if (action.status === REQUEST_SUCCESS) {\n                const curSpeed = action.payload.speed;\n                let cma = state.runningAvgSpeed;\n                let totalElements = state.speed.length;\n                if (!totalElements) totalElements = 1;\n                let runningAvgSpeed = cma + ((curSpeed - cma) / 50);\n\n\n                return {\n                    ...state,\n                    jobs: action.payload,\n                    runningAvgSpeed,\n                    speed: [...state.speed, {\n                        elapsedTime: action.payload.elapsedTime,\n                        speed: action.payload.speed,\n                        speedAvg: runningAvgSpeed\n                    }],\n                    isConnected: true\n                };\n            }\n            if (action.status === REQUEST_ERROR) {\n                return {\n                    ...state,\n                    error: action.payload,\n                    isConnected: false\n                };\n            }\n            break;\n        case ENABLE_STATUS_CHECK:\n            return {\n                ...state,\n                checkStatus: action.payload\n            };\n        case SET_BANDWIDTH:\n        case GET_BANDWIDTH:\n            return {\n                ...state,\n                bandwidth: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    providers: [],\n    configDump: {},\n    hasError: false,\n};\n/**\n * Specifies redux reduce operations for the config module.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {({hasError, providers, configDump}&{providers: *})|({hasError, providers, configDump}&{hasError: boolean, error: *})|({hasError, providers, configDump}&{hasError: boolean, configDump: *})|{hasError: boolean, providers: Array, configDump: {}}}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return {\n                ...state,\n                providers: action.payload,\n            };\n\n        case GET_CONFIG_DUMP:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configDump: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    hasError: true,\n                    error: action.payload\n                };\n            break;\n        default:\n            return state;\n    }\n}","import {\n    CHANGE_DISTRACTION_FREE_MODE,\n    CHANGE_LAYOUT_COLS,\n    GET_CONFIG_FOR_REMOTE,\n    GET_FILES_LIST,\n    GET_REMOTE_LIST,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    configs: {},\n    remotes: [],\n    files: {},\n    hasError: false,\n    numCols: 0,\n    distractionFreeMode: false\n};\n/**\n * Specifies the explorer specific reducers for the redux actions.\n * @param state\n * @param action\n * @returns {{configs: {}, remotes: Array, files: {}, hasError: boolean}|({configs, remotes, files, hasError}&{files: (initialState.files|{})})|({configs, remotes, files, hasError}&{files: (initialState.files|{}), hasError: boolean})|({configs, remotes, files, hasError}&{hasError: boolean, error: *})|({configs, remotes, files, hasError}&{configs: ((initialState.configs&*)|({}&*)), hasError: boolean})|({configs, remotes, files, hasError}&{remotes: *, hasError: boolean})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CONFIG_FOR_REMOTE:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configs: {...state.configs, ...action.payload},\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_REMOTE_LIST:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    remotes: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_FILES_LIST:\n            if (action.status === REQUEST_SUCCESS) {\n                return {\n                    ...state,\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\n                    hasError: false\n                }\n            }\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    files: {...state.files,\n                        [action.payload.path]: {\n                            time: new Date(),\n                            files: [],\n                            hasError: true,\n                            error: action.payload.error\n                        }\n                    }\n                };\n            break;\n        case CHANGE_LAYOUT_COLS:\n            return {\n                ...state,\n                numCols: action.payload.numCols\n            };\n        case CHANGE_DISTRACTION_FREE_MODE:\n            return {\n                ...state,\n                distractionFreeMode: action.payload\n            };\n        default:\n            return state;\n    }\n\n}","// A very simple stack implementation to handle back links in remote explorer\nclass Stack  {\n    constructor(items = undefined, count = undefined) {\n        if (items && count) {\n            this.items = items;\n            this.count = count;\n            return;\n        }\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\n        this.count = 1;\n    }\n\n    getLength() {\n        return this.count;\n    }\n\n    push(item) {\n        this.items.push(item);\n        this.count = this.count + 1;\n    }\n\n    pop() {\n        if (this.count > 0) {\n            this.count = this.count - 1;\n        }\n\n        return this.items.pop();\n    }\n\n    peek() {\n        return this.items.slice(-1)[0];\n    }\n\n    empty() {\n        this.items = [];\n        this.count = 0;\n    }\n\n    moveBack() {\n\n        if (this.getLength() > 1)\n            return this.pop();\n    }\n}\n\nexport default Stack;","import Stack from './Stack'\n\n// A very simple stack implementation to handle back links in remote explorer\nclass BackStack {\n    constructor(backStack = undefined) {\n        if (backStack) {\n            this.backStack = new Stack(backStack.backStack.items, backStack.backStack.count);\n            this.forwardStack = new Stack(backStack.forwardStack.items, backStack.forwardStack.count);\n            return;\n        }\n        this.backStack = new Stack();\n        this.forwardStack = new Stack();\n    }\n\n\n    getLength() {\n        return this.backStack.getLength();\n    }\n\n    push(item) {\n\n        this.backStack.push(item);\n        this.forwardStack.empty();\n\n    }\n\n    pop() {\n        const temp = this.backStack.pop();\n        return temp;\n    }\n\n    peek() {\n        return this.backStack.peek();\n    }\n\n    empty() {\n        this.backStack.empty();\n        this.forwardStack.empty();\n    }\n\n    moveBack() {\n        const temp = this.backStack.moveBack();\n        if(temp)\n            this.forwardStack.push(temp);\n        return temp;\n    }\n\n    moveForward(){\n        const temp = this.forwardStack.pop();\n        if(temp){\n            //Pop was successful\n            this.backStack.push(temp);\n        }\n        return temp;\n\n    }\n\n\n\n}\n\nexport default BackStack;","import {\n    CHANGE_GRID_MODE,\n    CHANGE_LOAD_IMAGES,\n    CHANGE_PATH,\n    CHANGE_REMOTE_NAME,\n    CHANGE_REMOTE_PATH,\n    CHANGE_SEARCH_QUERY,\n    CHANGE_VISIBILITY_FILTER,\n    CREATE_PATH,\n    NAVIGATE_BACK,\n    NAVIGATE_FWD,\n    NAVIGATE_UP\n} from \"../actions/types\";\nimport BackStack from \"../utils/classes/BackStack\";\n\nconst initialState = {\n    backStacks: {},\n    currentPaths: {},\n    visibilityFilters: {},\n    gridMode: {},\n    searchQueries: {},\n    loadImages: {}\n};\n\n/**\n * Specifies the reducers for explorer state manipulation.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {{currentPaths: {}, visibilityFilters: {}, gridMode: {}, searchQueries: {}, backStacks: {}}|({currentPaths, visibilityFilters, gridMode, searchQueries, backStacks}&{currentPaths: (initialState.currentPaths|{}), visibilityFilters: (initialState.visibilityFilters|{}), gridMode: (initialState.gridMode|{}), searchQueries: (initialState.searchQueries|{}), backStacks: (initialState.backStacks|{})})}\n */\nexport default function (state = initialState, action) {\n\n    const id = action.id;\n    // console.log(action.type);\n    if (id) {\n\n        let backStack = state.backStacks[id];\n        // console.log(backStack, backStack instanceof BackStack);\n        if (!backStack || !(backStack instanceof BackStack)) {\n\n\n            if (!(backStack instanceof BackStack)) {\n                // Redux dosen't store the internal functions of class objects when serialized. So as a work around,\n                // if the backstack is not an instance of backStack, i.e. its methods are missing,\n                // create a new backstack with current data\n                backStack = new BackStack(backStack)\n            } else {\n                backStack = new BackStack();\n            }\n        }\n\n\n        // let arrayLen = array.length - 1 ;\n\n        let remoteName = action.remoteName;\n        let remotePath = action.remotePath;\n\n        if (!remoteName) remoteName = \"\";\n        if (!remotePath) remotePath = \"\";\n        const data = {\n            remoteName: remoteName,\n            remotePath: remotePath\n        };\n\n        let visibilityFilter = state.visibilityFilters[id];\n        let gridMode = state.gridMode[id];\n\n        let searchQuery = \"\";\n        let loadImages = state.loadImages[id];\n        if (!loadImages) loadImages = false;\n\n\n        switch (action.type) {\n            case CHANGE_PATH:\n                backStack.push(data);\n                break;\n\n            case CHANGE_REMOTE_NAME:\n                // console.log(\"CHange remote name\", remoteName, remotePath)\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\n                    remotePath = remoteName;\n                    remoteName = \"/\";\n\n                } else {\n                    remotePath = \"\";\n                }\n                backStack.empty();\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CHANGE_REMOTE_PATH:\n                backStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CREATE_PATH:\n                if (!backStack || !(backStack instanceof BackStack))\n                    backStack = new BackStack();\n                break;\n\n            case NAVIGATE_UP:\n                // TODO: Write logic for up, which will navigate one directory up\n                let current = backStack.peek();\n                console.log(current);\n\n                if (current.remotePath && current.remotePath !== \"\") {\n                    const splitPath = current.remotePath.split('/');\n                    current.remotePath = \"\";\n                    if (splitPath.length > 1)\n                        for (let i = 0; i < splitPath.length - 1; i++) {\n                            current.remotePath = current.remotePath + ((i !== 0) ? '/' : '') + splitPath[i];\n                        }\n                }\n                console.log(current);\n                backStack.push(current);\n                break;\n\n            case NAVIGATE_FWD:\n                // if(ptr < array.length){\n                //     ptr--;\n                // }\n                backStack.moveForward();\n                break;\n\n            case NAVIGATE_BACK:\n                // console.log(backStack);\n                backStack.moveBack();\n                break;\n            case CHANGE_VISIBILITY_FILTER:\n                if (action.filter)\n                    visibilityFilter = action.filter;\n                break;\n            case CHANGE_GRID_MODE:\n                if (action.mode) {\n                    gridMode = action.mode;\n                }\n                break;\n\n            case CHANGE_SEARCH_QUERY:\n                searchQuery = action.searchQuery;\n                break;\n\n            case CHANGE_LOAD_IMAGES:\n                loadImages = action.payload;\n                break;\n            default:\n                break;\n        }\n        // currentPath = backStack.peek();\n        return {\n            ...state,\n            backStacks: {...state.backStacks, [id]: backStack},\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\n            gridMode: {...state.gridMode, [id]: gridMode},\n            searchQueries: {...state.searchQueries, [id]: searchQuery},\n            loadImages: {...state.loadImages, [id]: loadImages}\n        };\n    } else {\n        // console.error(\"ID is unexpectedly null\");\n        return state;\n    }\n\n\n};\n","import {GET_REMOTE_ABOUT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    about: {}\n};\n/**\n * Specifies reducers for getting information about the current providers.\n * @param state\n * @param action\n * @returns {{about: {}}|({about}&{about: (initialState.about|{})})}\n */\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_REMOTE_ABOUT:\n            if (action.status === REQUEST_SUCCESS) {\n                return {...state, about: {...state.about, [action.id]: action.payload}};\n            } else if (action.status === REQUEST_ERROR) {\n                // console.log(\"Error occurred\");\n                return state;\n            }\n            break;\n\n        default:\n            return state;\n\n    }\n}","import {CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS, CHANGE_USER_NAME_PASSWORD} from \"../actions/types\";\nimport axiosInstance from \"../utils/API/API\";\nimport {IP_ADDRESS_KEY, PASSWORD_KEY, USER_NAME_KEY} from \"../utils/Constants\";\n\nconst initialState = {\n    auth: {userName: \"\", password: \"\", ipAddress: \"http://localhost:5572\", interceptor: \"\"}\n};\n\n/**\n * Specifies reducers for user actions like change username, password, ipAddress etc.\n * @param state\n * @param action\n * @returns {{auth: {password: string, ipAddress: string, userName: string}}|({auth}&{auth: ((initialState.auth&*)|({password, ipAddress, userName}&*))})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_USER_NAME_PASSWORD:\n        case CHANGE_IP_ADDRESS:\n            state = {\n                ...state,\n                auth: {...state.auth, ...action.payload}\n            };\n            localStorage.setItem(USER_NAME_KEY, state.auth.userName);\n            localStorage.setItem(PASSWORD_KEY, state.auth.password);\n            localStorage.setItem(IP_ADDRESS_KEY, state.auth.ipAddress);\n            return state;\n        case CHANGE_AXIOS_INTERCEPTOR:\n            if (state.auth.interceptor)\n                axiosInstance.interceptors.request.eject(state.auth.interceptor);\n\n            const interceptorID = axiosInstance.interceptors.request.use(\n                config => {\n                    // Setup the configuration of authentication headers\n                    config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem(USER_NAME_KEY) + \":\" + localStorage.getItem(PASSWORD_KEY));\n                    config.baseURL = localStorage.getItem(\"ipAddress\");\n                    return config;\n                },\n                error => Promise.reject(error)\n            );\n            return {\n                ...state,\n                auth: {...state.auth, interceptor: interceptorID}\n            };\n        default:\n            return state;\n    }\n}","import {LOAD_IMAGE, REQUEST_ERROR, REQUEST_LOADING, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_IMAGE:\n            const {url, data, error} = action.payload;\n            let save = state[url];\n            if (!save)\n                save = {\n                    isLoading: false,\n                    data: \"\",\n                    error: \"\",\n                    hasError: false\n                };\n\n            switch (action.status) {\n                case REQUEST_LOADING:\n                    save.isLoading = true;\n                    save.hasError = false;\n                    break;\n                case REQUEST_SUCCESS:\n                    save.isLoading = false;\n                    save.hasError = false;\n                    save.data = data;\n                    break;\n                case REQUEST_ERROR:\n                    save.hasError = true;\n                    save.isLoading = false;\n                    save.error = error;\n                    break;\n                default:\n                    break;\n            }\n            return {\n                ...state,\n                [url]: {...save}\n            };\n\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\n\nimport statusReducer from './statusReducer';\nimport configReducer from \"./configReducer\";\nimport explorerReducer from \"./explorerReducer\";\nimport explorerState from \"./explorerStateReducer\";\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\nimport providerStatusReducer from \"./providerStatusReducer\";\nimport userActionsReducer from \"./userActionsReducer\";\nimport imagesReducer from \"./imagesReducer\";\n\n/**\n * Configures the root reducer to be executed before any other reducers configured in the system.\n * This involves actions for clearing the localStorage and state when user signs out.\n * @param state\n * @param action\n * @returns {any}\n */\nconst rootReducer = (state, action) => {\n    if (action.type === SIGNOUT_REQUEST) {\n        localStorage.clear();\n        state = undefined;\n    }\n\n    return appReducer(state, action);\n};\n\n/**\n * List of reducers to be configured. The reducers are called one by one from top to bottom.\n * @type {Reducer<any>}\n */\nconst appReducer = combineReducers({\n    status: statusReducer,\n    config: configReducer,\n    remote: explorerReducer,\n    explorer: explorerState,\n    providerStatus: providerStatusReducer,\n    user: userActionsReducer,\n    imageLoader: imagesReducer\n    // remoteOps: remoteOpsReducer\n});\n\nexport default rootReducer;","// Used to persist redux-state to the localStorage.\nexport class StateLoader {\n\n    /**\n     * It loads the redux state from the local store.\n     * @returns {{}|any}\n     */\n    loadState() {\n        try {\n            let serializedState = localStorage.getItem(\"curState\");\n\n            if (serializedState === null) {\n                return this.initializeState();\n            }\n\n            return JSON.parse(serializedState);\n        } catch (err) {\n            return this.initializeState();\n        }\n    }\n\n    /**\n     * Saves the current state to the localStore with variable name curState.\n     * BEWARE: Uses expensive operation JSON.stringify(). May cause performance issues. Any alternative is welcome.\n     * @param state {$ObjMap} The current state to be saved.\n     */\n    saveState(state) {\n        const newState = {\n            ...state,\n            imageLoader: undefined\n        };\n        try {\n            let serializedState = JSON.stringify(newState);\n            // console.log(serializedState);\n            localStorage.setItem(\"curState\", serializedState);\n\n        } catch (err) {\n            console.error(\"Error occurred while saving state\");\n            throw new Error(`Cannot Save State ${err}`);\n        }\n    }\n\n    /**\n     * Initializes the redux state with an empty map {}.\n     * @returns {{}}\n     */\n    initializeState() {\n        return {\n            //state object\n        }\n    };\n}\n","const throttled = {};\n\nexport default ({getState, dispatch}) => next => action => {\n    const time = action.meta && action.meta.throttle;\n\n    if (!time)\n        return next(action);\n\n    if (throttled[action.type]) {\n        return;\n    }\n\n    throttled[action.type] = true;\n\n    setTimeout(() => {\n        throttled[action.type] = false;\n    }, time);\n\n    next(action);\n}","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport {StateLoader} from \"./utils/StateLoader\";\nimport throttledMiddleware from './throttled';\n\n\nexport const middleware = [thunk, throttledMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst stateLoader = new StateLoader();\n\nconst store = createStore(rootReducer,\n    stateLoader.loadState(),\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    ));\n\n//Function to persist store data to localStorage\nstore.subscribe(() => {\n    stateLoader.saveState(store.getState());\n});\n\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}