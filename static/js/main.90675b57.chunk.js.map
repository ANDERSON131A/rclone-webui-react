{"version":3,"sources":["polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/index.js","utils/StateLoader.js","store.js","index.js","actions/types.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Promise","all","__webpack_require__","e","then","bind","Login","Register","Page404","Page500","App","react_default","a","createElement","data-test","react_toastify","react_router_dom","Suspense","fallback","className","react_router","exact","path","name","render","props","Component","Boolean","location","hostname","match","initialState","isConnected","jobs","providers","configDump","hasError","configs","remotes","files","Stack","Object","classCallCheck","this","items","remoteName","remotePath","count","item","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","appReducer","combineReducers","status","state","arguments","length","action","type","FETCH_STATUS","REQUEST_SUCCESS","objectSpread","payload","REQUEST_ERROR","error","config","GET_PROVIDERS","GET_CONFIG_DUMP","remote","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_FILES_LIST","defineProperty","time","Date","filesList","explorer","id","data","visibilityFilter","searchQuery","CHANGE_PATH","CHANGE_REMOTE_NAME","indexOf","CHANGE_REMOTE_PATH","CREATE_PATH","NAVIGATE_UP","current","splitPath","split","i","NAVIGATE_FWD","moveForward","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","filter","CHANGE_GRID_MODE","mode","CHANGE_SEARCH_QUERY","rootReducer","SIGNOUT_REQUEST","localStorage","clear","StateLoader","createClass","key","value","serializedState","getItem","initializeState","JSON","parse","err","stringify","setItem","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","apply","subscribe","saveState","getState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.90675b57.chunk.js","sourcesContent":["/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es/set'\nimport 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div data-test=\"appComponent\">\n                <ToastContainer/>\n                <HashRouter>\n                    <React.Suspense fallback={loading()}>\n                        <Switch>\n                            <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\n                            <Route exact path=\"/register\" name=\"Register Page\"\n                                   render={props => <Register {...props}/>}/>\n                            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\n                            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\n                            <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\n                        </Switch>\n                    </React.Suspense>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {FETCH_STATUS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    isConnected: false,\n    jobs: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_STATUS:\n\n            if (action.status === REQUEST_SUCCESS) {\n\n                return {\n                    ...state,\n                    jobs: action.payload,\n                    isConnected: true\n                };\n            }\n            if (action.status === REQUEST_ERROR) {\n                return {\n                    ...state,\n                    error: action.payload,\n                    isConnected: false\n                };\n            }\n            break;\n\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    providers: [],\n    configDump: {},\n    hasError: false,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return {\n                ...state,\n                providers: action.payload,\n            };\n\n        case GET_CONFIG_DUMP:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configDump: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    hasError: true,\n                    error: action.payload\n                };\n            break;\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_FOR_REMOTE, GET_FILES_LIST, GET_REMOTE_LIST, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    configs: {},\n    remotes: [],\n    files: {},\n    hasError: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CONFIG_FOR_REMOTE:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configs: {...state.configs, ...action.payload},\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_REMOTE_LIST:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    remotes: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_FILES_LIST:\n            if (action.status === REQUEST_SUCCESS) {\n                return {\n                    ...state,\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\n                    hasError: false\n                }\n            }\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    files: {...state.files,\n                        [action.payload.path]: {\n                            time: new Date(),\n                            files: [],\n                            hasError: true,\n                            error: action.payload.error\n                        }\n                    }\n                };\n            break;\n        default:\n            return state;\n    }\n\n}","// A very simple stack implementation to handle back links in remote explorer\nclass Stack  {\n    constructor() {\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\n        this.count = 1;\n    }\n\n    getLength() {\n        return this.count;\n    }\n\n    push(item) {\n        this.items.push(item);\n        this.count = this.count + 1;\n    }\n\n    pop() {\n        if (this.count > 0) {\n            this.count = this.count - 1;\n        }\n\n        return this.items.pop();\n    }\n\n    peek() {\n        return this.items.slice(-1)[0];\n    }\n\n    empty() {\n        this.items = [];\n        this.count = 0;\n    }\n\n    moveBack() {\n\n        if (this.getLength() > 1)\n            return this.pop();\n    }\n}\n\nexport default Stack;","import Stack from './Stack'\n\n// A very simple stack implementation to handle back links in remote explorer\nclass BackStack {\n    constructor() {\n        this.backStack = new Stack();\n        this.forwardStack = new Stack();\n    }\n\n    getLength() {\n        return this.backStack.getLength();\n    }\n\n    push(item) {\n\n        this.backStack.push(item);\n        this.forwardStack.empty();\n\n    }\n\n    pop() {\n        const temp = this.backStack.pop();\n        return temp;\n    }\n\n    peek() {\n        return this.backStack.peek();\n    }\n\n    empty() {\n        this.backStack.empty();\n        this.forwardStack.empty();\n    }\n\n    moveBack() {\n        const temp = this.backStack.moveBack();\n        if(temp)\n            this.forwardStack.push(temp);\n        return temp;\n    }\n\n    moveForward(){\n        const temp = this.forwardStack.pop();\n        if(temp){\n            //Pop was successful\n            this.backStack.push(temp);\n        }\n        return temp;\n\n    }\n\n\n\n}\n\nexport default BackStack;","import {\n    CHANGE_GRID_MODE,\n    CHANGE_PATH,\n    CHANGE_REMOTE_NAME,\n    CHANGE_REMOTE_PATH,\n    CHANGE_SEARCH_QUERY,\n    CHANGE_VISIBILITY_FILTER,\n    CREATE_PATH,\n    NAVIGATE_BACK,\n    NAVIGATE_FWD,\n    NAVIGATE_UP\n} from \"../actions/types\";\nimport BackStack from \"../utils/classes/BackStack\";\n\nconst initialState = {\n    backStacks: {},\n    currentPaths: {},\n    visibilityFilters: {},\n    gridMode: {},\n    searchQueries: {},\n};\n\n\nexport default function (state = initialState, action) {\n\n    const id = action.id;\n    // console.log(action.type);\n    if (id) {\n\n        let backStack = state.backStacks[id];\n        if (!backStack) backStack = new BackStack();\n\n\n        // let arrayLen = array.length - 1 ;\n\n        let remoteName = action.remoteName;\n        let remotePath = action.remotePath;\n\n        if (!remoteName) remoteName = \"\";\n        if (!remotePath) remotePath = \"\";\n        const data = {\n            remoteName: remoteName,\n            remotePath: remotePath\n        };\n\n        let visibilityFilter = state.visibilityFilters[id];\n        let gridMode = state.gridMode[id];\n\n        let searchQuery = \"\";\n\n\n        switch (action.type) {\n            case CHANGE_PATH:\n                backStack.push(data);\n                break;\n\n            case CHANGE_REMOTE_NAME:\n                // console.log(\"CHange remote name\", remoteName, remotePath)\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\n                    remotePath = remoteName;\n                    remoteName = \"/\";\n\n                } else {\n                    remotePath = \"\";\n                }\n                backStack.empty();\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CHANGE_REMOTE_PATH:\n                backStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CREATE_PATH:\n                backStack = new BackStack();\n                break;\n\n            case NAVIGATE_UP:\n                // TODO: Write logic for up, which will navigate one directory up\n                let current = backStack.pop();\n                if (current.remotePath && current.remotePath !== \"\") {\n                    const splitPath = current.remotePath.split('/');\n                    current.remotePath = \"\";\n                    if (splitPath.length > 1)\n                        for (let i = 0; i < splitPath.length - 1; i++) {\n                            current.remotePath = current.remotePath + '/' + splitPath[i];\n                        }\n                }\n                backStack.push(current);\n                break;\n\n            case NAVIGATE_FWD:\n                // if(ptr < array.length){\n                //     ptr--;\n                // }\n                backStack.moveForward();\n                break;\n\n            case NAVIGATE_BACK:\n                // console.log(backStack);\n                backStack.moveBack();\n                break;\n            case CHANGE_VISIBILITY_FILTER:\n                if (action.filter)\n                    visibilityFilter = action.filter;\n                break;\n            case CHANGE_GRID_MODE:\n                if (action.mode) {\n                    gridMode = action.mode;\n                }\n                break;\n\n            case CHANGE_SEARCH_QUERY:\n                searchQuery = action.searchQuery;\n                break;\n            default:\n                break;\n        }\n        // currentPath = backStack.peek();\n        return {\n            ...state,\n            backStacks: {...state.backStacks, [id]: backStack},\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\n            gridMode: {...state.gridMode, [id]: gridMode},\n            searchQueries: {...state.searchQueries, [id]: searchQuery}\n        };\n    } else {\n        // console.error(\"ID is unexpectedly null\");\n        return state;\n    }\n\n\n};\n","import {combineReducers} from 'redux';\n\nimport statusReducer from './statusReducer';\nimport configReducer from \"./configReducer\";\nimport explorerReducer from \"./explorerReducer\";\nimport explorerState from \"./explorerStateReducer\";\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\n\nconst rootReducer = (state, action) => {\n    if (action.type === SIGNOUT_REQUEST) {\n        localStorage.clear();\n        state = undefined;\n    }\n\n    return appReducer(state, action);\n}\n\nconst appReducer = combineReducers({\n    status: statusReducer,\n    config: configReducer,\n    remote: explorerReducer,\n    explorer: explorerState\n});\n\nexport default rootReducer;","// Used to persist redux-state to the localStorage.\nexport class StateLoader {\n\n    loadState() {\n        try {\n            let serializedState = localStorage.getItem(\"curState\");\n\n            if (serializedState === null) {\n                return this.initializeState();\n            }\n\n            return JSON.parse(serializedState);\n        } catch (err) {\n            return this.initializeState();\n        }\n    }\n\n    saveState(state) {\n        try {\n            let serializedState = JSON.stringify(state);\n            localStorage.setItem(\"curState\", serializedState);\n\n        } catch (err) {\n        }\n    }\n\n    initializeState() {\n        return {\n            //state object\n        }\n    };\n}\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport {StateLoader} from \"./utils/StateLoader\";\n\n// const initalState = {};\n\nexport const middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst stateLoader = new StateLoader();\n\nconst store = createStore(rootReducer,\n    stateLoader.loadState(),\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    ));\n\n//Function to persist store data to localStorage\nstore.subscribe(() => {\n    stateLoader.saveState(store.getState());\n});\n\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const FETCH_STATUS = 'FETCH_STATUS';\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\nexport const CHANGE_PATH = 'CHANGE_PATH';\nexport const CREATE_PATH = 'CREATE_PATH';\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\n\n\n\nexport const REQUEST_ERROR = 'error';\nexport const REQUEST_SUCCESS = 'success';\n"],"sourceRoot":""}