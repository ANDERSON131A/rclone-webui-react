{"version":3,"sources":["utils/Tools.js","../node_modules/lodash.isobject/index.js","utils/API/API.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","actions/configActions.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/FormFeedback.js","../node_modules/reactstrap/es/Collapse.js","views/Base/NewDriveAuthModal/NewDriveAuthModal.js","views/RemoteManagement/NewDrive/ProviderAutoSuggest.js","views/RemoteManagement/NewDrive/NewDrive.js"],"names":["bytesToKB","bytes","bytesToGB","formatBytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","config","name","find","ele","idx","array","Prefix","addColonAtLast","indexOf","__webpack_require__","d","__webpack_exports__","changeListVisibility","changeSearchFilter","isLocalRemoteName","isEmpty","obj","Array","isArray","key","hasOwnProperty","visibilityAssociation","Images","Pdf","list","filter","acceptType","item","IsDir","MimeType","searchQuery","toLowerCase","Name","startsWith","remoteName","module","exports","value","type","axiosInstance","axios","create","baseURL","localStorage","getItem","headers","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","performCopyOrMoveFile","performCopyFile","_callee","mode","url","splitRes","data","_data","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","split","_async","console","post","abrupt","sent","stop","interceptors","request","use","Authorization","btoa","error","Promise","reject","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","bool","aria-label","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","Object","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","aria-hidden","btnOutlineColor","classes","href","defaultAriaLabel","ref","Component","defaultProps","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","columnProps","shape","push","pull","order","offset","xs","sm","md","lg","xl","widths","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","columnProp","_classNames","colSizeInterfix","colClass","_colClass","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","body","Card","CardBody","getProviders","getConfigDump","_utils_API_API__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","dispatch","then","res","GET_PROVIDERS","payload","providers","GET_CONFIG_DUMP","status","REQUEST_SUCCESS","REQUEST_ERROR","CardHeader","prop_types_default","utils","valid","tooltip","FormFeedback_FormFeedback","objectWithoutPropertiesLoose","validMode","classnames_default","react_default","esm_extends","_transitionStatusToCl","es_FormFeedback","Collapse_propTypes","esm_objectSpread","react_transition_group","isOpen","arrayOf","navbar","Collapse_defaultProps","appear","enter","exit","timeout","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","Collapse_Collapse","_Component","state","height","esm_assertThisInitialized","inheritsLoose","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","_this2","otherProps","transitionProps","childProps","in","collapseClass","getTransitionClass","style","react","es_Collapse","NewDriveAuthModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","toggle","assertThisInitialized","closeModal","isVisible","Modal","ModalHeader","data-test","ModalBody","ModalFooter","React","getSuggestions","inputValue","trim","inputLength","lang","Description","slice","getSuggestionValue","suggestion","renderSuggestion","ProviderAutoSuggest","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","onChange","currentConfig","inputProps","placeholder","dist_default","alwaysRenderSuggestions","highlightFirstSuggestion","DriveParameters","drivePrefix","loadAdvanced","changeHandler","currentValues","isValidMap","errorsMap","currentProvider","outputMap","Options","map","attr","Hide","Advanced","labelValue","concat","Help","requiredValue","Required","hasExamples","Examples","examplesMap","inputType","IsPassword","Type","FormGroup","row","Label","for","Input","invalid","id","required","CustomInput","_ref2","label","_ref2$isValid","isValid","NewDrive","context","target","defineProperty","handleInputChange","inputName","optionTypes","formValues","objectSpread","validateResult","prevState","formErrors","changeDriveType","event","_ref3","newValue","val","availableOptions","DefaultStr","openSetupDrive","colSetup","setupDriveDiv","scrollIntoView","behavior","editAdvancedOptions","advancedOptions","clearForm","driveName","changeName","driveNameIsValid","response","errors","openAdvancedSettings","colAdvanced","configEndDiv","colRconfig","formValuesValid","authModalIsVisible","configCheckInterval","handleSubmit","toggleAuthModal","startAuthentication","checkConfigStatus","clearInterval","history","toast","t0","autoClose","_this$state","flag","_i","_Object$entries","entries","_ref6","_ref5","slicedToArray","setInterval","validateForm","defaults","finalParameterValues","_i2","_Object$entries2","_loop","parameters","info","_context2","stopAuthentication","warn","_this$state3","Form","onSubmit","marginBottom","NewDrive_ProviderAutoSuggest","CardFooter","el","Base_NewDriveAuthModal_NewDriveAuthModal","connect"],"mappings":"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","file":"static/js/14.7fddf0e0.chunk.js","sourcesContent":["export function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport default isEmpty;\n\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/*Returns object of config if found, else returns undefined*/\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\n\n// Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\nlet axiosInstance = axios.create({\n    baseURL: localStorage.getItem('ipAddress'),\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n\naxiosInstance.interceptors.request.use(\n    config => {\n        config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem('username') + \":\" + localStorage.getItem('password'));\n        // console.log(config, localStorage.getItem('username'), localStorage.getItem('password'));\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = \"/sync/move\";\n        } else {\n            url = \"/operations/movefile\";\n        }\n    } else {\n        if (IsDir) {\n            url = \"/sync/copy\";\n        } else {\n            url = \"/operations/copyfile\";\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        const data = {\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n            _async: true\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        const data = {\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n            _async: true\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\nexport default axiosInstance;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import axiosInstance from \"../utils/API/API\";\nimport {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"./types\";\n\nexport const getProviders = () => dispatch => {\n    axiosInstance.post(\"/config/providers\").then(res => dispatch({\n        type: GET_PROVIDERS,\n        payload: res.data.providers\n    }))\n};\n\nexport const getConfigDump = () => dispatch => {\n    axiosInstance.post(\"/config/dump\").then(res => dispatch({\n        type: GET_CONFIG_DUMP,\n        status: REQUEST_SUCCESS,\n        payload: res.data\n    }), error => dispatch({\n        type: GET_CONFIG_DUMP,\n        status: REQUEST_ERROR,\n        payload: error\n    }))\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  tooltip: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  valid: undefined\n};\n\nvar FormFeedback = function FormFeedback(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      valid = props.valid,\n      tooltip = props.tooltip,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"valid\", \"tooltip\", \"tag\"]);\n\n  var validMode = tooltip ? 'tooltip' : 'feedback';\n  var classes = mapToCssModules(classNames(className, valid ? \"valid-\" + validMode : \"invalid-\" + validMode), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormFeedback.propTypes = propTypes;\nFormFeedback.defaultProps = defaultProps;\nexport default FormFeedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React from \"react\";\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\n\nclass NewDriveAuthModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.props.closeModal();\n    }\n\n\n    render() {\n        const {isVisible} = this.props;\n        return (\n            <div>\n                <Modal isOpen={isVisible} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle} data-test=\"modalHeader\">Configuring your drive.</ModalHeader>\n                    <ModalBody data-test=\"modalBody\">\n                        A page will open for you with the authentication for your drive. This modal will automatically\n                        dismiss upon successful creation\n                    </ModalBody>\n                    <ModalFooter data-test=\"modalFooter\">\n                        <Button color=\"primary\" onClick={this.toggle}>Done</Button>{' '}\n                        {/*<Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>*/}\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nNewDriveAuthModal.propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    closeModal: PropTypes.func.isRequired\n};\nNewDriveAuthModal.defaultProps = {\n    isVisible: true,\n};\n\n\nexport default NewDriveAuthModal;","import Autosuggest from 'react-autosuggest';\nimport React from \"react\";\nimport {findFromConfig} from \"../../../utils/Tools\";\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = (config, value) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    if (inputLength === 0) {\n        return config;\n\n    }\n\n    return inputLength === 0 ? [] : config.filter(lang =>\n        lang.Description.toLowerCase().slice(0, inputLength) === inputValue\n    );\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion.Prefix;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n    <div>\n        {suggestion.Description}\n    </div>\n);\n\nclass ProviderAutoSuggest extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Autosuggest is a controlled component.\n        // This means that you need to provide an input value\n        // and an onChange handler that updates this value (see below).\n        // Suggestions also need to be provided to the Autosuggest,\n        // and they are initially empty because the Autosuggest is closed.\n        this.state = {\n            suggestions: []\n        };\n    }\n\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({value}) => {\n        // console.log(value);\n        this.setState({\n            suggestions: getSuggestions(this.props.suggestions, value)\n        });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n\n    render() {\n        const {value, onChange, suggestions} = this.props;\n        const currentConfig = findFromConfig(suggestions, value);\n        let renderVal = \"\";\n        if (currentConfig === undefined) {\n            renderVal = value;\n        } else {\n            renderVal = currentConfig.Description;\n        }\n\n        // Autosuggest will pass through all these props to the input.\n        const inputProps = {\n            placeholder: 'Type a provider type',\n            value: renderVal,\n            onChange: onChange\n        };\n\n        // Finally, render it!\n        return (\n            <Autosuggest\n                suggestions={this.state.suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                alwaysRenderSuggestions={true}\n                highlightFirstSuggestion={true}\n                inputProps={inputProps}\n            />\n        );\n    }\n}\n\nexport default ProviderAutoSuggest;","import React from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Col,\n    Collapse,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\n// import {config} from \"./config.js\";\nimport NewDriveAuthModal from \"../../Base/NewDriveAuthModal\";\nimport axiosInstance from \"../../../utils/API/API\";\nimport isEmpty, {findFromConfig, validateDuration, validateInt, validateSizeSuffix} from \"../../../utils/Tools\";\nimport ProviderAutoSuggest from \"./ProviderAutoSuggest\";\nimport {toast} from \"react-toastify\";\nimport PropTypes from 'prop-types';\nimport {getProviders} from \"../../../actions/configActions\";\nimport {connect} from \"react-redux\";\n\nfunction DriveParameters({drivePrefix, loadAdvanced, changeHandler, currentValues, isValidMap, errorsMap, config}) {\n    if (drivePrefix !== undefined && drivePrefix !== \"\") {\n        const currentProvider = findFromConfig(config, drivePrefix);\n        let outputMap = [];\n        if (currentProvider !== undefined) {\n            const inputsMap = currentProvider.Options;\n\n            // console.log(\"current values\" + currentValues);\n\n            /* Options format is as follows\n            {\n                        \"Advanced\": true,\n                        \"Default\": -1,\n                        \"DefaultStr\": \"off\",\n                        \"Help\": \"If Object's are greater, use drive v2 API to download.\",\n                        \"Hide\": 0,\n                        \"IsPassword\": false,\n                        \"Name\": \"v2_download_min_size\",\n                        \"NoPrefix\": false,\n                        \"Provider\": \"\",\n                        \"Required\": false,\n                        \"ShortOpt\": \"\",\n                        \"Type\": \"SizeSuffix\",\n                        \"Value\": null,\n                        \"ValueStr\": \"off\"\n                    },\n\n            */\n\n            outputMap = inputsMap.map((attr, idx) => {\n                if (attr.Hide === 0 && ((loadAdvanced && attr.Advanced) || (!loadAdvanced && !attr.Advanced))) {\n                    const labelValue = `${attr.Help}`;\n                    const requiredValue = ((attr.Required) ? (<i className={\"text-red\"}>*</i>) : null);\n\n                    const hasExamples = !isEmpty(attr.Examples);\n                    let examplesMap = null;\n\n                    let inputType = \"\";\n\n\n                    if (attr.IsPassword) {\n                        inputType = \"password\";\n                    } else if (hasExamples) {\n                        inputType = \"string\";\n                        // examplesMap = attr.Examples.map((ex1, id1) => {\n                        //     return (<option key={\"option\" + id1} value={ex1.Value}>{ex1.Help}</option>);\n                        // })\n                    } else if (attr.Type === \"bool\") {\n                        inputType = \"select\";\n                        examplesMap = [\n                            (<option key={1} value={true}>Yes</option>),\n                            (<option key={2} value={false}>No</option>)\n                        ];\n                    } else {\n                        // TODO: Write logic for SizeSuffix, Duration, int\n                        if (attr.Type === \"int\") {\n                            inputType = \"number\";\n                        } else if (attr.Type === \"string\") {\n                            inputType = \"text\";\n                        } else {\n                            inputType = \"text\";\n                        }\n\n                    }\n                    return (\n                        <FormGroup key={idx} row>\n                            <Label for={attr.Name} sm={5}>{labelValue}{requiredValue}</Label>\n                            <Col sm={7}>\n                                <Input type={inputType} value={currentValues[attr.Name]}\n                                       name={attr.Name} valid={isValidMap[attr.Name]} invalid={!isValidMap[attr.Name]}\n                                       id={attr.Name} onChange={changeHandler} required={attr.Required}>\n                                    {examplesMap}\n                                </Input>\n                                <FormFeedback>{errorsMap[attr.Name]}</FormFeedback>\n\n                            </Col>\n                        </FormGroup>\n                    );\n                } else {\n                    return null;\n                }\n            });\n        }\n        return outputMap;\n    }\n    return (\n        <div>Select a drive type to continue</div>\n    );\n}\n\n// function DriveTypes({config}) {\n//     // console.log(config);\n//     let configMap = config.map((drive, idx) => (\n//         <option key={drive.Prefix} value={idx}>{drive.Description}</option>\n//     ));\n//     return configMap;\n// }\n\nfunction CustomInput({key, id, label, changeHandler, type, value, name, placeholder, isValid = false}) {\n    return (\n        <FormGroup key={key} row>\n            <Label for={id} sm={5}>{label}</Label>\n            <Col sm={7}>\n                <Input type={type} value={value} name={name} placeholder={placeholder}\n                       id={id} onChange={changeHandler} valid={isValid} invalid={!isValid} required/>\n                <FormFeedback valid>Sweet! that name is available</FormFeedback>\n                <FormFeedback>Sad! That name is already assigned or empty</FormFeedback>\n            </Col>\n        </FormGroup>);\n}\n\n\nclass NewDrive extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n\n            colRconfig: true,\n            colSetup: false,\n            colAdvanced: false,\n            driveName: \"\",\n\n\n            advancedOptions: false,\n            formValues: {},\n            formValuesValid: {},\n            required: {},\n            authModalIsVisible: false,\n\n            drivePrefix: \"\",\n            driveNameIsValid: false,\n            formErrors: {driveName: \"\"},\n            optionTypes: {},\n            isValid: {},\n\n        };\n        this.configCheckInterval = null;\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleAuthModal = this.toggleAuthModal.bind(this);\n        this.startAuthentication = this.startAuthentication.bind(this);\n        this.checkConfigStatus = this.checkConfigStatus.bind(this);\n    }\n\n    toggle = (e) => {\n        let name = e.target.name;\n\n        this.setState({[name]: !this.state[name]})\n    };\n\n    // Returns true or false based on whether the config is created\n    async checkConfigStatus() {\n        const {driveName} = this.state;\n\n        try {\n            let res = await axiosInstance.post(\"/config/get\", {name: driveName});\n            // console.log(res);\n\n            if (!isEmpty(res.data)) {\n                // Config is created, clear the interval and hide modal\n                clearInterval(this.configCheckInterval);\n                this.configCheckInterval = null;\n                this.toggleAuthModal();\n                this.props.history.push('/dashboard');\n\n            }\n        } catch (e) {\n            // console.log(`Error occurred while checking for config: ${e}`);\n            toast.error(`Error creating config. ${e}`, {\n                autoClose: false\n            });\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        let inputName = e.target.name;\n        let inputValue = e.target.value;\n        const inputType = this.state.optionTypes[inputName];\n        this.setState({\n            formValues: {\n                ...this.state.formValues,\n                [inputName]: inputValue\n            }\n        });\n        let validateResult = true;\n        let error = \"\";\n        if (inputType === \"SizeSuffix\") {\n            validateResult = validateSizeSuffix(inputValue);\n            if (!validateResult) {\n                error = \"The valid input is size( off | {unit}{metric} eg: 10G, 100M, 10G100M etc.)\"\n            }\n        } else if (inputType === \"Duration\") {\n            validateResult = validateDuration(inputValue);\n            if (!validateResult) {\n                error = \"The valid input is time ({unit}{metric} eg: 10ms, 100m, 10h15ms etc.)\"\n            }\n        } else if (inputType === \"int\") {\n            validateResult = validateInt(inputValue);\n            if (!validateResult) {\n                error = \"The valid input is int (100,200,300 etc)\"\n            }\n        }\n\n        if (this.state.required[inputName] && (!inputValue || inputValue === \"\")) {\n            validateResult = false;\n            if (!validateResult) {\n                error += \" This field is required\";\n            }\n        }\n\n\n        this.setState((prevState) => {\n            return {\n                isValid: {\n                    ...prevState.isValid,\n                    [inputName]: validateResult\n                },\n                formErrors: {\n                    ...prevState.formErrors,\n                    [inputName]: error\n                },\n            }\n        });\n\n\n\n    };\n\n    // Update the driveType and then load the equivalent input parameters for that drive\n    changeDriveType = (event, {newValue}) => {\n\n        const {providers} = this.props;\n\n        let val = newValue;\n\n\n        let availableOptions = {};\n        let optionTypes = {};\n        let isValid = {};\n        let formErrors = {};\n        let required = {};\n        // let drivePrefix = \"\";\n        // console.log(\"driveType change\", val);\n        if (val !== undefined && val !== \"\") {\n\n            const currentConfig = findFromConfig(providers, val);\n            if (currentConfig !== undefined) {\n\n                currentConfig.Options.forEach(item => {\n\n                    const {DefaultStr, Type, Name, Required, Hide} = item;\n                    if (Hide === 0) {\n                        availableOptions[Name] = DefaultStr;\n                        optionTypes[Name] = Type;\n                        required[Name] = Required;\n\n                        if (Required && (!DefaultStr || DefaultStr === \"\"))\n                            isValid[Name] = false;\n                        else\n                            isValid[Name] = true;\n                        formErrors[Name] = \"\";\n                    }\n                });\n            }\n            this.setState({\n                drivePrefix: val,\n                formValues: availableOptions,\n                optionTypes: optionTypes,\n                isValid: isValid,\n                formErrors: formErrors,\n                required: required\n            });\n        } else {\n            this.setState({drivePrefix: val})\n\n        }\n\n\n\n\n    };\n\n    // Open second step of setting up the drive\n    openSetupDrive = (e) => {\n        if (e) e.preventDefault();\n        this.setState({'colSetup': true});\n        this.setupDriveDiv.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    // Decide whether to use advanced options\n    editAdvancedOptions = (e) => {\n        this.setState({advancedOptions: !this.state.advancedOptions});\n    };\n\n    validateForm() {\n        //    Validate driveName and other parameters\n        const {driveNameIsValid, drivePrefix, isValid} = this.state;\n        let flag = true;\n\n        if (!driveNameIsValid) {\n            flag = false;\n        }\n        if (drivePrefix === \"\") {\n            flag = false;\n        }\n\n\n        /*Check for validations based on inputType*/\n        for (const [key, value] of Object.entries(isValid)) {\n            if (!key || !value) {\n                flag = false;\n                break;\n            }\n        }\n\n        return flag;\n    }\n\n    toggleAuthModal() {\n        this.setState((state, props) => {\n            return {authModalIsVisible: !state.authModalIsVisible}\n        });\n    }\n\n    startAuthentication() {\n        this.toggleAuthModal();\n        // Check every second if the config is created\n        if (this.configCheckInterval === null) {\n            this.configCheckInterval = setInterval(this.checkConfigStatus, 1000);\n        } else {\n            console.error(\"Interval already running. Should not start a new one\");\n        }\n\n    }\n\n    stopAuthentication() {\n        this.setState((state, props) => {\n            return {authModalIsVisible: false}\n        });\n        clearInterval(this.configCheckInterval);\n\n    }\n\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        // console.log(\"Submitted form\");\n\n        const {formValues, drivePrefix} = this.state;\n        const {providers} = this.props;\n\n\n        if (this.validateForm()) {\n\n            if (drivePrefix !== undefined && drivePrefix !== \"\") {\n                const currentProvider = findFromConfig(providers, drivePrefix);\n                if (currentProvider !== undefined) {\n\n\n                    const defaults = currentProvider.Options;\n\n                    // console.log(config, formValues, defaults);\n\n                    let finalParameterValues = {};\n\n\n                    for (const [key, value] of Object.entries(formValues)) {\n\n                        const defaultValueObj = defaults.find((ele, idx, array) => {\n                            return (key === ele.Name);\n                        });\n\n                        const {DefaultStr} = defaultValueObj;\n                        if (value !== DefaultStr) {\n                            // console.log(`${value} !== ${DefaultStr}`);\n                            finalParameterValues[key] = value;\n                        }\n\n                    }\n\n\n                    let data = {\n                        parameters: finalParameterValues,\n\n                        name: this.state.driveName,\n                        type: this.state.drivePrefix\n                    };\n\n\n                    // console.log(\"Validated form\");\n                    this.startAuthentication();\n                    try {\n                        await axiosInstance.post('/config/create', data);\n                        toast.info(\"Config created\");\n\n                    } catch (err) {\n                        toast.error(`Error creating config. ${err}`, {\n                            autoClose: false\n                        });\n                        this.stopAuthentication();\n                    }\n\n                }\n            }\n        } else {\n            if (!this.state.colSetup) {\n                this.openSetupDrive();\n            }\n\n            if (this.state.advancedOptions && !this.state.colAdvanced) {\n                this.openAdvancedSettings();\n            }\n            toast.warn(`Check for errors before submitting.`, {\n                autoClose: false\n            });\n        }\n    }\n\n    clearForm = e => {\n        this.setState({driveName: \"\", drivePrefix: \"\"})\n    };\n\n\n\n    changeName = e => {\n        const value = e.target.value;\n\n        this.setState({driveName: value}, () => {\n\n            if (value === undefined || value === \"\") {\n                this.setState({driveNameIsValid: false});\n            } else {\n\n                axiosInstance.post('/config/get', {name: value}).then((response) => {\n                    let errors = this.state.formErrors;\n                    let isValid = isEmpty(response.data);\n                    if (isValid) {\n                        errors[\"driveName\"] = \"\";\n                    } else {\n                        errors[\"driveName\"] = \"Duplicate\";\n\n                    }\n                    this.setState({formErrors: errors, driveNameIsValid: isValid});\n                });\n            }\n\n        });\n    };\n\n    openAdvancedSettings = e => {\n        if (this.state.advancedOptions) {\n            this.setState({colAdvanced: true});\n        } else {\n            this.configEndDiv.scrollIntoView({behavior: \"smooth\"});\n        }\n    };\n\n\n\n    componentDidMount() {\n        if (!this.props.providers || this.props.providers.length < 1)\n            this.props.getProviders();\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.configCheckInterval);\n        this.configCheckInterval = null;\n    }\n\n    render() {\n        const {colRconfig, colSetup, colAdvanced, drivePrefix, advancedOptions, driveName, driveNameIsValid} = this.state;\n        const {providers} = this.props;\n        // console.log(\"config\", config);\n        return (\n            <div data-test=\"newDriveComponent\">\n                <p>This 3 step process will guide you through creating a new config. For auto config, leave the\n                    parameters as is.</p>\n                <Form onSubmit={this.handleSubmit}>\n                    <Card>\n                        <CardHeader>\n                            <h5>\n                                <Button color=\"link\" name=\"colRconfig\" onClick={this.toggle}\n                                        style={{marginBottom: '1rem'}}><strong>Step 1:</strong> Remote Config</Button>\n                            </h5>\n\n                        </CardHeader>\n                        <Collapse isOpen={colRconfig}>\n\n                            <CardBody>\n                                <CustomInput label=\"Name of this drive (For your reference)\"\n                                             changeHandler={this.changeName} value={driveName}\n                                             placeholder={\"Enter a name\"} name=\"name\" id=\"driveName\"\n                                             isValid={driveNameIsValid}/>\n\n                                <FormGroup row>\n                                    <Label for=\"driveType\" sm={5}>Select</Label>\n                                    <Col sm={7}>\n                                        <ProviderAutoSuggest suggestions={providers} value={drivePrefix}\n                                                             onChange={this.changeDriveType}/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col sm={3}>\n                                        <Label for=\"inputDriveName\">Docs are available at </Label>{' '}\n                                        <a href=\"https://rclone.org/commands/rclone_config/\">Rclone Config</a>\n                                    </Col>\n                                </FormGroup>\n                            </CardBody>\n\n                            <CardFooter>\n                                <div className=\"clearfix\">\n                                    <Button color=\"success\" className=\"float-right\" onClick={this.openSetupDrive}><i\n                                        className=\"fa fa-check fa-lg \"/></Button>\n                                </div>\n                            </CardFooter>\n\n                        </Collapse>\n                    </Card>\n                    <Card>\n                        {/*div for Scrolling to here*/}\n                        <div ref={(el) => this.setupDriveDiv = el}/>\n                        <CardHeader>\n                            <h5>\n                                <Button color=\"link\" name=\"colSetup\" onClick={this.toggle}\n                                        style={{marginBottom: '1rem'}}><strong>Step 2:</strong> Setup Drive</Button>\n                            </h5>\n\n                        </CardHeader>\n                        <Collapse isOpen={colSetup}>\n\n                            <CardBody>\n                                <DriveParameters drivePrefix={drivePrefix} loadAdvanced={false}\n                                                 changeHandler={this.handleInputChange}\n                                                 errorsMap={this.state.formErrors}\n                                                 isValidMap={this.state.isValid}\n                                                 currentValues={this.state.formValues} config={providers}/>\n                            </CardBody>\n                            <CardFooter>\n                                <div className=\"clearfix\">\n                                    <div className=\"float-right\">\n                                        <Input type=\"checkbox\" value={advancedOptions}\n                                               onChange={this.editAdvancedOptions}/><span className=\"mr-3\">Edit Advanced Options</span>\n                                        <Button color=\"success\" onClick={this.openAdvancedSettings}><i\n                                            className=\"fa fa-check fa-lg \"/></Button>\n\n                                    </div>\n                                </div>\n                            </CardFooter>\n\n                        </Collapse>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                            <h5>\n                                <Button color=\"link\" name=\"colAdvanced\" onClick={this.toggle}\n                                        style={{marginBottom: '1rem'}}><strong>Step 3:</strong> Advanced\n                                    (optional)</Button>\n\n                            </h5>\n\n                        </CardHeader>\n                        <Collapse isOpen={colAdvanced}>\n\n                            <CardBody>\n                                <DriveParameters drivePrefix={drivePrefix} loadAdvanced={true}\n                                                 changeHandler={this.handleInputChange}\n                                                 errorsMap={this.state.formErrors}\n                                                 isValidMap={this.state.isValid}\n                                                 currentValues={this.state.formValues} config={providers}/>\n                            </CardBody>\n\n                        </Collapse>\n                    </Card>\n                    <div className=\"clearfix\" ref={(el) => {\n                        this.configEndDiv = el\n                    }}>\n                        <div className=\"float-right mb-3\">\n                            <Button color=\"info\" type=\"reset\" onClick={() => this.clearForm()}>Clear</Button>\n                            <Button color=\"success\" type=\"submit\">Create Config</Button>\n\n                        </div>\n                    </div>\n                </Form>\n                <NewDriveAuthModal isVisible={this.state.authModalIsVisible} closeModal={this.toggleAuthModal}/>\n            </div>);\n    }\n}\n\nconst mapStateToProps = state => ({\n    providers: state.config.providers\n});\n\nNewDrive.propTypes = {\n    providers: PropTypes.array.isRequired,\n    getProviders: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {getProviders})(NewDrive);\n"],"sourceRoot":""}