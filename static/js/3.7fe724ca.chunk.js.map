{"version":3,"sources":["actions/userActions.js","views/Pages/Login/Login.js"],"names":["changeUserNamePassword","userName","password","dispatch","type","CHANGE_USER_NAME_PASSWORD","payload","CHANGE_AXIOS_INTERCEPTOR","changeIPAddress","ipAddress","CHANGE_IP_ADDRESS","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeUserName","e","setState","username","target","value","connectionSuccess","changePassword","onSubmit","preventDefault","_this$state","state","Promise","all","then","history","push","checkConnection","_this$state2","_this$props","axiosInstance","post","urls","noopAuth","data","console","log","error","window","location","href","split","localStorage","getItem","IP_ADDRESS_KEY","clear","signOut","_this$state3","react_default","a","createElement","className","data-test","Container","Row","Col","md","CardGroup","Card","CardBody","Form","UncontrolledAlert","color","children","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","autoComplete","onChange","xs","Button","disabled","onClick","style","width","Component","connect","SIGNOUT_REQUEST"],"mappings":"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","file":"static/js/3.7fe724ca.chunk.js","sourcesContent":["import {CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS, CHANGE_USER_NAME_PASSWORD, SIGNOUT_REQUEST} from \"./types\";\n\n/**\n * Sign out the current user and delete the redux cache\n * @returns {Function}\n */\nexport const signOut = () => dispatch => {\n    dispatch({\n        type: SIGNOUT_REQUEST\n    })\n};\n\n/**\n * Set new username and password for the rclone auth.\n * @param userName      {string}    New username to change.\n * @param password      {string}    New Password to change.\n * @returns             {Function}\n */\nexport const changeUserNamePassword = (userName, password) => dispatch => {\n    dispatch({\n        type: CHANGE_USER_NAME_PASSWORD,\n        payload: {userName, password}\n    });\n    dispatch({\n        type: CHANGE_AXIOS_INTERCEPTOR\n    });\n};\n\n/**\n * Change the IPAddress of the rclone backend.\n * @param ipAddress\n * @returns {Function}\n */\nexport const changeIPAddress = (ipAddress) => dispatch => {\n    dispatch({\n        type: CHANGE_IP_ADDRESS,\n        payload: {ipAddress}\n    });\n    dispatch({\n        type: CHANGE_AXIOS_INTERCEPTOR\n    });\n};\n\n\n","import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardGroup,\n    Col,\n    Container,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row,\n    UncontrolledAlert\n} from 'reactstrap';\nimport {connect} from \"react-redux\";\nimport {changeIPAddress, changeUserNamePassword, signOut} from \"../../../actions/userActions\";\nimport axiosInstance from \"../../../utils/API/API\";\nimport {IP_ADDRESS_KEY} from \"../../../utils/Constants\";\nimport urls from \"../../../utils/API/endpoint\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        let ipAddress = window.location.href.split(\"/#\")[0];\n        if (localStorage.getItem(IP_ADDRESS_KEY))\n            ipAddress = localStorage.getItem(IP_ADDRESS_KEY);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            ipAddress,\n            connectionSuccess: false,\n            error: \"\"\n        };\n    }\n\n    changeUserName = e => {\n        this.setState({\n            username: e.target.value,\n            connectionSuccess: false\n        });\n    };\n    changePassword = e => {\n        this.setState({\n            password: e.target.value,\n            connectionSuccess: false\n\n        })\n    };\n    changeIPAddress = e => {\n\n        this.setState({\n            ipAddress: e.target.value,\n            connectionSuccess: false\n        });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const {ipAddress, username, password} = this.state;\n\n        Promise.all([\n            changeUserNamePassword(username, password),\n            changeIPAddress(ipAddress)\n        ]).then(() => {\n            this.props.history.push('/dashboard');\n        });\n        // localStorage.setItem('username', username);\n        // localStorage.setItem('password', password);\n        // localStorage.setItem('ipAddress', ipAddress);\n\n    };\n\n    checkConnection = (e) => {\n        e.preventDefault();\n\n        // Set the localStorage parameters temporarily.\n        const {ipAddress, username, password} = this.state;\n        const {changeUserNamePassword, changeIPAddress} = this.props;\n\n        Promise.all([\n            changeUserNamePassword(username, password),\n            changeIPAddress(ipAddress)\n        ]).then(() => {\n            axiosInstance.post(urls.noopAuth).then((data) => {\n                console.log(\"Connection successful.\");\n                this.setState({\n                    connectionSuccess: true,\n                    error: \"\"\n                })\n            }, (error) => {\n                console.log(error);\n                this.setState({\n                    connectionSuccess: false,\n                    error: \"Error connecting. Please check username password and verify if rclone is working at the specified IP.\"\n                })\n            })\n        })\n\n\n    };\n\n    componentDidMount() {\n        localStorage.clear();\n        this.props.signOut();\n    }\n\n\n    render() {\n        const {username, password, ipAddress, connectionSuccess, error} = this.state;\n\n        return (\n            <div className=\"app flex-row align-items-center\" data-test=\"loginComponent\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"8\">\n                            <CardGroup>\n                                <Card className=\"p-4\">\n                                    <CardBody>\n                                        <Form onSubmit={this.onSubmit}>\n                                            <h1>Login</h1>\n                                            <p className=\"text-muted\">Sign In to your account</p>\n                                            {error && <UncontrolledAlert color=\"danger\" children={error}/>}\n                                            {connectionSuccess && <UncontrolledAlert color=\"success\"\n                                                                                     children={\"Connection verified. You may now login.\"}/>}\n                                            <InputGroup className=\"mb-3\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText>\n                                                        <i className=\"icon-user\"></i>\n                                                    </InputGroupText>\n                                                </InputGroupAddon>\n                                                <Input type=\"text\" placeholder=\"IP Address / URL\"\n                                                       autoComplete=\"ipAddress\"\n                                                       onChange={this.changeIPAddress} value={ipAddress}/>\n                                            </InputGroup>\n                                            <InputGroup className=\"mb-3\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText>\n                                                        <i className=\"icon-user\"></i>\n                                                    </InputGroupText>\n                                                </InputGroupAddon>\n                                                <Input type=\"text\" placeholder=\"Username\" autoComplete=\"username\"\n                                                       onChange={this.changeUserName} value={username}/>\n                                            </InputGroup>\n                                            <InputGroup className=\"mb-4\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText>\n                                                        <i className=\"icon-lock\"></i>\n                                                    </InputGroupText>\n                                                </InputGroupAddon>\n                                                <Input type=\"password\" placeholder=\"Password\"\n                                                       autoComplete=\"current-password\" onChange={this.changePassword}\n                                                       value={password}/>\n                                            </InputGroup>\n                                            <Row>\n                                                <Col xs=\"6\">\n                                                    <Button color=\"primary\" className=\"px-4\"\n                                                            disabled={!connectionSuccess}>Login</Button>\n                                                </Col>\n                                                <Col xs=\"6\" className=\"text-right\">\n                                                    <Button onClick={this.checkConnection} color=\"primary\"\n                                                            className=\"px-4\">Verify</Button>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{width: '44%'}}>\n                                    <CardBody className=\"text-center\">\n                                        <div>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </CardGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nexport default connect(null, {signOut, changeUserNamePassword, changeIPAddress})(Login);\n"],"sourceRoot":""}