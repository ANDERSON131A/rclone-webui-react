{"version":3,"sources":["utils/API/API.js","utils/Tools.js","views/Explorer/RemotesList/RemoteListAutoSuggest.js","actions/explorerActions.js","actions/explorerStateActions.js","views/Explorer/RemotesList/RemotesList.js","views/Explorer/FilesView/Constants.js","views/Explorer/FilesView/FileComponent.js","views/Explorer/FilesView/FilesView.js","views/Base/ScrollableDiv/ScrollableDiv.js","views/Base/NewFolder/NewFolder.js","views/Base/NewFolder/FileOperations.js","views/Explorer/RemoteExplorer/RemoteExplorer.js","views/Explorer/RemoteExplorerLayout/RemoteExplorerLayout.js"],"names":["axiosInstance","axios","create","baseURL","localStorage","getItem","headers","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","Name","IsDir","performCopyOrMoveFile","performCopyFile","_callee","mode","url","splitRes","data","_data","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","split","length","post","abrupt","sent","stop","interceptors","request","use","config","Authorization","btoa","error","Promise","reject","formatBytes","bytes","decimals","arguments","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","name","find","ele","idx","array","Prefix","addColonAtLast","indexOf","__webpack_require__","d","__webpack_exports__","changeListVisibility","isEmpty","obj","Array","isArray","key","hasOwnProperty","visibilityAssociation","Images","Pdf","list","filter","acceptType","item","MimeType","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","lang","slice","getSuggestionValue","suggestion","renderSuggestion","react_default","createElement","RemoteListAutoSuggest","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSuggestionsFetchRequested","_ref","setState","suggestions","onSuggestionsClearRequested","state","_this$props","inputProps","placeholder","onChange","dist_default","alwaysRenderSuggestions","highlightFirstSuggestion","React","Component","getFsInfo","remoteName","dispatch","fs","then","res","type","GET_CONFIG_FOR_REMOTE","status","REQUEST_SUCCESS","payload","defineProperty","REQUEST_ERROR","getFiles","remotePath","remote","path","concat","GET_FILES_LIST","filesList","changePath","containerID","CHANGE_PATH","id","getFilesForContainerID","changeRemoteName","CHANGE_REMOTE_NAME","getState","_state$explorer$curre","explorer","currentPaths","createPath","CREATE_PATH","navigateUp","NAVIGATE_BACK","navigateFwd","NAVIGATE_FWD","navigateBack","RemotesList","shouldUpdateRemoteName","event","newValue","openButtonText","openRemote","openEnabled","getRemoteNames","_this2","_this$state","remotes","hasError","role","aria-label","Form","onSubmit","Row","Col","xs","sm","lg","RemotesList_RemoteListAutoSuggest","Button","className","color","defaultProps","connect","ownProps","currentPath","GET_REMOTE_LIST","ItemTypes","fileComponentSource","beginDrag","console","_props$item","Path","endDrag","_endDrag","asyncToGenerator","regenerator_default","mark","monitor","component","_monitor$getDropResul","srcRemoteName","srcRemotePath","destRemoteName","destRemotePath","dropEffect","updateHandler","getDropResult","fsInfo","Features","Copy","toast","info","Move","t0","response","JSON","stringify","autoClose","_x","_x2","_x3","apply","FileIcon","confirmDelete","deleteHandle","window","confirm","Actions","_ref2","downloadHandle","onClick","Fragment","compose","configs","DragSource","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","_ref3","clickHandler","gridMode","ModTime","Size","modTime","Date","parse","Card","CardBody","CardFooter","e","toLocaleDateString","filesTarget","drop","didDrop","_monitor$getItem","UpButtonComponent","upButtonHandle","FilesView","_this$props$currentPa","getFilesList","dismissAlert","isDownloadProgress","getFileComponents","isDir","map","ID","FilesView_FileComponent","handleFileClick","isLoading","downloadingItems","shouldUpdate","bind","assertThisInitialized","IsBucket","updateRemotePath","newRemotePath","updateRemoteName","_this$props$currentPa2","downloadUrl","BucketBased","prevState","method","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","_context2","connectDropTarget","isOver","files","dirComponentMap","fileComponentMap","renderElement","Container","fluid","Table","style","position","top","left","height","width","zIndex","opacity","backgroundColor","Alert","isOpen","toggle","PureComponent","visibilityFilter","visibilityFilters","DropTarget","dropTarget","ScrollableDiv","children","overflow","NewFolder","disableForm","shouldDisable","changeName","target","createNewFolder","handleSubmit","preventDefault","closeModal","isVisible","Modal","ModalHeader","ModalBody","FormGroup","row","Label","for","Input","required","autoFocus","disabled","ModalFooter","FileOperations","openNewFolderModal","newFolderModalIsVisible","closeNewFolderModal","handleChangeFilter","newFilter","changeVisibilityFilter","handleChangeGridMode","changeGridMode","filterOptions","Base_NewFolder_NewFolder","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","RemoteExplorer","remoteNameTemp","pathBreadCrumbs","CardHeader","Explorer_RemotesList_RemotesList","NewFolder_FileOperations","ScrollableDiv_ScrollableDiv","Explorer_FilesView_FilesView","changeRemotePath","CHANGE_REMOTE_PATH","RemoteExplorerList","cols","remoteExplorers","backStacks","lgSize","push","Explorer_RemoteExplorer_RemoteExplorer","toString","RemoteExplorerLayout","changeLayout","nos","DragDropContext","HTML5Backend"],"mappings":"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","file":"static/js/17.faedb1b9.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nlet axiosInstance = axios.create({\n    baseURL: localStorage.getItem('ipAddress'),\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\naxiosInstance.interceptors.request.use(\n    config => {\n        config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem('username') + \":\" + localStorage.getItem('password'));\n        // console.log(config, localStorage.getItem('username'), localStorage.getItem('password'));\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = \"/sync/move\";\n        } else {\n            url = \"/operations/movefile\";\n        }\n    } else {\n        if (IsDir) {\n            url = \"/sync/copy\";\n        } else {\n            url = \"/operations/copyfile\";\n        }\n    }\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        const data = {\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1]\n        };\n\n        // console.log(\"dirop:\", data);\n\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        const data = {\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\nexport default axiosInstance;\n","export function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport default isEmpty;\n\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/*Returns object of config if found, else returns undefined*/\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        })\n        return newList;\n    }\n    return list;\n\n}\n","import Autosuggest from 'react-autosuggest';\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = (config, value) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    if (inputLength === 0) {\n        return config;\n\n    }\n\n    return inputLength === 0 ? [] : config.filter(lang =>\n        lang.toLowerCase().slice(0, inputLength) === inputValue\n    );\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n    <div>\n        {suggestion}\n    </div>\n);\n\nclass RemoteListAutoSuggest extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Autosuggest is a controlled component.\n        // This means that you need to provide an input value\n        // and an onChange handler that updates this value (see below).\n        // Suggestions also need to be provided to the Autosuggest,\n        // and they are initially empty because the Autosuggest is closed.\n        this.state = {\n            suggestions: []\n        };\n    }\n\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({value}) => {\n        // console.log(value);\n        this.setState({\n            suggestions: getSuggestions(this.props.suggestions, value)\n        });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const {value, onChange} = this.props;\n\n\n        // Autosuggest will pass through all these props to the input.\n        const inputProps = {\n            placeholder: 'Type the name of remote you want to open',\n            value: value,\n            onChange: onChange\n        };\n\n        // Finally, render it!\n        return (\n            <Autosuggest\n                suggestions={this.state.suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                alwaysRenderSuggestions={true}\n                highlightFirstSuggestion={true}\n                inputProps={inputProps}\n            />\n        );\n    }\n}\n\nRemoteListAutoSuggest.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    suggestions: PropTypes.array.isRequired\n};\n\nexport default RemoteListAutoSuggest;","import axiosInstance from \"../utils/API/API\";\nimport {GET_CONFIG_FOR_REMOTE, GET_FILES_LIST, GET_REMOTE_LIST, REQUEST_ERROR, REQUEST_SUCCESS} from \"./types\";\nimport {addColonAtLast} from \"../utils/Tools\";\n\nexport const getFsInfo = (remoteName) => dispatch => {\n    axiosInstance.post(\"operations/fsinfo\", {fs: addColonAtLast(remoteName)})\n        .then((res) => {\n                dispatch({\n                    type: GET_CONFIG_FOR_REMOTE,\n                    status: REQUEST_SUCCESS,\n                    payload: {[remoteName]: res.data},\n\n                })\n            },\n            error => dispatch({\n                type: GET_CONFIG_FOR_REMOTE,\n                status: REQUEST_ERROR,\n                payload: error\n            }))\n};\n\nexport const getRemoteNames = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        // console.log(state);\n        if (!state.remote.remotes || state.remote.remotes.length < 1) {\n\n            axiosInstance.post(\"config/listremotes\").then(res => dispatch({\n                type: GET_REMOTE_LIST,\n                status: REQUEST_SUCCESS,\n                payload: res.data.remotes\n            }), error => dispatch({\n                type: GET_REMOTE_LIST,\n                status: REQUEST_ERROR,\n                payload: error\n            }))\n        }\n    }\n};\n\n\nexport const getFiles = (remoteName, remotePath) => dispatch => {\n    let newRemoteName = \"\";\n    if (remoteName !== \"\") {\n        if (remoteName.indexOf('/') !== 0) {/*The name starts with a /: local Name*/\n            newRemoteName = addColonAtLast(remoteName);\n        } else {\n            newRemoteName = remoteName;\n        }\n\n\n        let data = {\n            fs: newRemoteName,\n            remote: remotePath\n        };\n\n        const path = `${remoteName}-${remotePath}`;\n        axiosInstance.post(\"operations/list\", data).then(res => dispatch({\n                type: GET_FILES_LIST,\n                status: REQUEST_SUCCESS,\n                payload: {path: path, filesList: res.data.list}\n            }),\n            error => dispatch({\n                type: GET_FILES_LIST,\n                status: REQUEST_ERROR,\n                payload: {path: path, error}\n            })\n        )\n    }\n\n};\n\n","import {\n    CHANGE_GRID_MODE,\n    CHANGE_PATH,\n    CHANGE_REMOTE_NAME,\n    CHANGE_REMOTE_PATH,\n    CHANGE_VISIBILITY_FILTER,\n    CREATE_PATH,\n    NAVIGATE_BACK,\n    NAVIGATE_FWD\n} from \"./types\";\nimport {getFiles} from \"./explorerActions\";\n\nexport const changePath = (containerID, remoteName, remotePath) => {\n    return (dispatch) => {\n        dispatch({\n            type: CHANGE_PATH,\n            remoteName: remoteName,\n            id: containerID,\n            remotePath: remotePath\n        });\n        dispatch(getFilesForContainerID(containerID))\n    }\n};\n\nexport const changeRemoteName = (containerID, remoteName) => {\n\n    return (dispatch) => {\n        dispatch({\n            type: CHANGE_REMOTE_NAME,\n            remoteName: remoteName,\n            id: containerID,\n            remotePath: \"\"\n        });\n\n        dispatch(getFilesForContainerID(containerID))\n    }\n};\n\nexport const getFilesForContainerID = (containerID) => {\n\n    return (dispatch, getState) => {\n        const state = getState();\n        const {remoteName, remotePath} = state.explorer.currentPaths[containerID];\n        if (remoteName && remoteName !== \"\")\n            dispatch(getFiles(remoteName, remotePath));\n    }\n};\n\nexport const changeRemotePath = (containerID, remotePath) => {\n    return (dispatch) => {\n        dispatch({\n            type: CHANGE_REMOTE_PATH,\n            id: containerID,\n            remotePath: remotePath\n        });\n        dispatch(getFilesForContainerID(containerID))\n    }\n};\n\n\nexport const createPath = (containerID) => dispatch => {\n\n    dispatch({\n        type: CREATE_PATH,\n        id: containerID\n    })\n};\n\nexport const navigateUp = (containerID) => dispatch => {\n\n    dispatch({\n        type: NAVIGATE_BACK,\n        id: containerID\n    });\n    dispatch(getFilesForContainerID(containerID))\n\n};\n\nexport const navigateFwd = (containerID) => dispatch => {\n\n    dispatch({\n        type: NAVIGATE_FWD,\n        id: containerID\n    });\n    dispatch(getFilesForContainerID(containerID))\n\n};\n\nexport const navigateBack = (containerID) => dispatch => {\n\n    dispatch({\n        type: NAVIGATE_BACK,\n        id: containerID\n    });\n    dispatch(getFilesForContainerID(containerID))\n\n};\n\nexport const changeVisibilityFilter = (containerID, filter) => dispatch => {\n    dispatch({\n        type: CHANGE_VISIBILITY_FILTER,\n        id: containerID,\n        filter\n    })\n};\n\nexport const changeGridMode = (containerID, mode) => dispatch => {\n    dispatch({\n        type: CHANGE_GRID_MODE,\n        id: containerID,\n        mode\n    })\n};\n\n","import React from 'react';\nimport RemoteListAutoSuggest from \"./RemoteListAutoSuggest\";\nimport {connect} from \"react-redux\";\nimport {getFsInfo, getRemoteNames} from \"../../../actions/explorerActions\";\nimport PropTypes from 'prop-types'\nimport {changeRemoteName} from \"../../../actions/explorerStateActions\";\nimport {Button, Col, Form, Row} from \"reactstrap\";\n\nclass RemotesList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEmpty: false,\n            remoteName: props.remoteName,\n            openEnabled: false,\n            openButtonText: \"Open\"\n        };\n    }\n\n    componentDidMount() {\n\n        this.props.getRemoteNames();\n    }\n\n    shouldUpdateRemoteName = (event, {newValue}) => {\n        if (newValue.indexOf('/') === 0) {\n            this.setState({\n                remoteName: newValue,\n                openButtonText: \"Open local path\",\n\n            });\n        } else {\n            this.setState({\n                remoteName: newValue,\n                openButtonText: \"Open\"\n            });\n        }\n\n\n    };\n\n    openRemote = () => {\n        const {changeRemoteName, containerID} = this.props;\n        const {remoteName} = this.state;\n        changeRemoteName(containerID, remoteName);\n\n        this.props.getFsInfo(remoteName);\n\n    };\n\n\n    render() {\n        const {isEmpty, remoteName} = this.state;\n        const {remotes} = this.props;\n        const {hasError} = this.props;\n        // const {updateRemoteNameHandle} = this.props;\n\n        if (hasError) {\n            return (\n                <div>\n                    Error loading remotes. Please try again.\n                </div>\n            )\n        } else if (isEmpty) {\n            return (\n                <div>\n                    Add some remotes to see them here <span role=\"img\" aria-label=\"sheep\">🐑</span>.\n                </div>);\n        } else {\n\n            return (\n                <Form onSubmit={() => this.openRemote()}>\n                    <Row>\n\n                        <Col xs={12} sm={10} lg={8}>\n                            <RemoteListAutoSuggest value={remoteName} onChange={this.shouldUpdateRemoteName}\n                                                   suggestions={remotes}/>\n                        </Col>\n                        <Col xs={12} sm={2} lg={2}>\n\n                            <Button className={\"btn-lg\"} color=\"success\"\n                                    type=\"submit\">{this.state.openButtonText}</Button>\n                        </Col>\n\n                    </Row>\n                </Form>\n\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    remotes: state.remote.remotes,\n    hasError: false,\n    error: state.remote.error,\n    currentPath: state.explorer.currentPaths[ownProps.containerID],\n});\n\nconst propTypes = {\n    remotes: PropTypes.array.isRequired,\n    error: PropTypes.object,\n    hasError: PropTypes.bool,\n    containerID: PropTypes.string.isRequired,\n\n    currentPath: PropTypes.shape({\n        remoteName: PropTypes.string.isRequired,\n        remotePath: PropTypes.string.isRequired\n    })\n\n};\n\n\nconst defaultProps = {};\n\nRemotesList.propTypes = propTypes;\nRemotesList.defaultProps = defaultProps;\n\n\nexport default connect(mapStateToProps, {\n    getRemoteNames,\n    getFsInfo,\n    changeRemoteName,\n\n})(RemotesList);\n","/*This is used by React DND for identifying the drag source type*/\nexport const ItemTypes = {\n    FILECOMPONENT: 'FileComponent'\n}","import React from \"react\";\nimport {Button, Card, CardBody, CardFooter} from \"reactstrap\";\n\nimport {ItemTypes} from './Constants'\nimport {DragSource} from 'react-dnd'\nimport {formatBytes} from \"../../../utils/Tools\";\nimport {performCopyFile, performMoveFile} from \"../../../utils/API/API\";\nimport {toast} from \"react-toastify\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\n\nconst fileComponentSource = {\n    beginDrag(props) {\n        console.log(\"props\", props, props.remoteName);\n        const {Name, Path, IsDir} = props.item;\n        return {\n            Name: Name, Path: Path, IsDir: IsDir, remoteName: props.remoteName\n        }\n    },\n\n    async endDrag(props, monitor, component) {\n        // console.log(\"EndDrag\", monitor.getDropResult());\n        try {\n            if (monitor.getDropResult()) {\n\n\n                const {srcRemoteName, srcRemotePath, destRemoteName, destRemotePath, Name, IsDir, dropEffect, updateHandler} = monitor.getDropResult();\n\n                if (dropEffect === \"move\") { /*Default operation without holding alt is copy, named as move in react-dnd*/\n                    if (component.fsInfo.Features.Copy) {\n                        await performCopyFile(srcRemoteName, srcRemotePath, destRemoteName, destRemotePath, Name, IsDir);\n                        updateHandler();\n                        if (IsDir) {\n                            toast.info(`Directory copied: ${Name}`);\n                        } else {\n                            toast.info(`File copied: ${Name}`);\n                        }\n                    } else {\n                        toast.error(\"This remote does not support copying\");\n                    }\n\n                } else {\n                    if (component.fsInfo.Features.Move) {\n                        await performMoveFile(srcRemoteName, srcRemotePath, destRemoteName, destRemotePath, Name, IsDir);\n                        updateHandler();\n                        if (IsDir) {\n                            toast.info(`Directory moved: ${Name}`);\n                        } else {\n                            toast.info(`File moved: ${Name}`);\n                        }\n                    } else {\n                        toast.error(\"This remote does not support moving\");\n                    }\n\n                }\n            }\n        } catch (e) {\n            const error = e.response ? e.response : e;\n            console.log(JSON.stringify(error));\n\n            toast.error(`Error copying file(s). ${error}`, {\n                autoClose: false\n            });\n\n        }\n    }\n};\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging()\n    }\n}\n\n\n// TODO: Add mode parameter for card view or list view\nfunction FileIcon({IsDir, MimeType}) {\n    let className = \"fa-file\";\n    if (IsDir) {\n        className = \"fa-folder\";\n    } else if (MimeType === \"application/pdf\") {\n        className = \"fa-file-pdf-o\";\n    } else if (MimeType === \"image/jpeg\") {\n        className = \"fa-file-image-o\";\n    } else if (MimeType === \"application/rar\" || MimeType === \"application/x-rar-compressed\" || MimeType === \" application/zip\") {\n        className = \"fa-file-archive-o\";\n    } else if (MimeType === \"text/plain\") {\n        className = \"fa-file-text-o\";\n    } else if (MimeType === \"text/x-vcard\") {\n        className = \"fa-address-card-o\";\n    }\n    return <i className={className + \" fa fa-lg\"}/>;\n}\n\nfunction confirmDelete(deleteHandle, item) {\n    if (window.confirm(`Are you sure you want to delete ${item.Name}`)) {\n        deleteHandle(item);\n    }\n}\n\nfunction Actions({downloadHandle, deleteHandle, item}) {\n\n    const {IsDir} = item;\n\n    if (!IsDir) {\n\n        return (\n            <React.Fragment>\n                <Button color=\"link\" onClick={() => downloadHandle(item)}>\n                    <i className={\"fa fa-cloud-download fa-lg d-inline\"}/>\n                </Button>\n                <Button color=\"link\" className=\"text-danger\" onClick={() => confirmDelete(deleteHandle, item)}>\n                    <i className={\"fa fa-remove fa-lg d-inline\"}/>\n                </Button>\n            </React.Fragment>\n\n        );\n    } else {\n        return (\n            <Button color=\"link\" className=\"text-danger\" onClick={() => confirmDelete(deleteHandle, item)}>\n                <i className={\"fa fa-remove fa-lg d-inline\"}/>\n            </Button>\n        )\n    }\n}\n\n// Non used props are required for drag-and-drop functionality\nfunction FileComponent({item, clickHandler, downloadHandle, deleteHandle, connectDragSource, gridMode/*isDragging, remoteName*/}, ...props) {\n    /*\n    MimeTypes: https://www.freeformatter.com/mime-types-list.html\n    * {\n    * For Directory\n\t\t\t\"ID\": \"18DsZ4ne6XV3qwDZQCBj2nAEwouFMxudB\",\n\t\t\t\"IsDir\": true,\n\t\t\t\"MimeType\": \"inode/directory\",\n\t\t\t\"ModTime\": \"2019-02-12T14:23:33.440Z\",\n\t\t\t\"Name\": \"two pass 28-1-19\",\n\t\t\t\"Path\": \"two pass 28-1-19\",\n\t\t\t\"Size\": -1\n\t\t},\n\t\t*\n\t\t* // For non-directory\n\t\t* {\n\t\t\t\"ID\": \"1u4D6-UdxhJYY8AVd8FcTN2Tl73W1RXsk\",\n\t\t\t\"IsDir\": false,\n\t\t\t\"MimeType\": \"application/octet-stream\",\n\t\t\t\"ModTime\": \"2018-11-18T13:14:54.068Z\",\n\t\t\t\"Name\": \"streamlined-gdoc.gdoc\",\n\t\t\t\"Path\": \"streamlined-gdoc.gdoc\",\n\t\t\t\"Size\": 173\n\t\t},\n\n    * */\n    const {IsDir, MimeType, ModTime, Name, Size} = item;\n\n    let modTime = new Date(Date.parse(ModTime));\n    // console.log(\"card\", gridMode);\n\n    if (gridMode === \"card\") {\n        return connectDragSource(\n            <div className={\"col-lg-3\"}>\n                <Card>\n                    <CardBody>\n                        <FileIcon IsDir={IsDir} MimeType={MimeType}/> {Name}\n                    </CardBody>\n                    <CardFooter>\n                        <Actions downloadHandle={downloadHandle} deleteHandle={deleteHandle} item={item}/>\n                    </CardFooter>\n                </Card>\n            </div>\n        )\n    } else {\n        return connectDragSource(\n            <tr className={\"pointer-cursor\"}>\n                <td><input type=\"checkbox\"/></td>\n                <td onClick={(e) => clickHandler(e, item)}><FileIcon IsDir={IsDir} MimeType={MimeType}/> {Name}</td>\n                <td>{Size === -1 ? \"-\" : formatBytes(Size, 2)}</td>\n                <td>{modTime.toLocaleDateString()}</td>\n                <td><Actions downloadHandle={downloadHandle} deleteHandle={deleteHandle} item={item}/></td>\n            </tr>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const currentPath = state.explorer.currentPaths[ownProps.containerID];\n\n    let fsInfo = {};\n\n    if (currentPath && state.remote.configs && state.remote.configs[currentPath.remoteName]) {\n        fsInfo = state.remote.configs[currentPath.remoteName];\n    }\n\n\n    return {\n        // files,\n        // currentPath,\n        fsInfo,\n        // gridMode\n    }\n};\n\nexport default compose(\n    connect(\n        mapStateToProps, {}\n    ),\n    DragSource(ItemTypes.FILECOMPONENT, fileComponentSource, collect)\n)(FileComponent)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axiosInstance from \"../../../utils/API/API\";\nimport {Alert, Button, Col, Container, Row, Table} from \"reactstrap\";\nimport {DropTarget} from \"react-dnd\";\nimport FileComponent from \"./FileComponent\";\nimport {ItemTypes} from \"./Constants\";\nimport {toast} from \"react-toastify\";\nimport {addColonAtLast, changeListVisibility} from \"../../../utils/Tools\";\nimport {connect} from \"react-redux\";\nimport {getFiles} from \"../../../actions/explorerActions\";\nimport {compose} from \"redux\";\nimport {changePath, navigateUp} from \"../../../actions/explorerStateActions\";\n\n\n/*\n* Start code for react DND\n* */\n\nconst filesTarget = {\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) return;\n        console.log(\"drop\", props, monitor, monitor.getItem(), component);\n\n        let {Name, Path, IsDir, remoteName} = monitor.getItem();\n\n        let srcRemoteName = addColonAtLast(remoteName);\n        let srcRemotePath = Path;\n        let destRemoteName = addColonAtLast(props.currentPath.remoteName);\n        let destRemotePath = props.currentPath.remotePath;\n\n        // console.log(\"drop:this\", this);\n\n        return {\n            srcRemoteName,\n            srcRemotePath,\n            destRemoteName,\n            destRemotePath,\n            Name,\n            IsDir,\n            updateHandler: component.updateHandler\n        }\n\n    }\n};\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver()\n    }\n}\n\nfunction renderOverlay() {\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                height: '100%',\n                width: '100%',\n                zIndex: 1,\n                opacity: 0.5,\n                backgroundColor: 'gray',\n            }}\n        />\n    );\n}\n\n/*\n* END code for react DND\n* */\n\n// Provides the up button view in the files view\nfunction UpButtonComponent({upButtonHandle, gridMode}) {\n    if (gridMode === \"card\") {\n        return (\n            <Col lg={12}>\n                <Button onClick={() => upButtonHandle()}>Go Up</Button>\n            </Col>\n        )\n    } else {\n        return (\n            <tr onClick={() => upButtonHandle()} className={\"pointer-cursor\"}>\n                <td></td>\n                <td><i className={\"fa fa-file-o\"}/> Go Up...</td>\n                <td></td>\n                <td></td>\n                <td></td>\n            </tr>);\n    }\n}\n\n\nclass FilesView extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            isDownloadProgress: false,\n            downloadingItems: 0,\n            shouldUpdate: true,\n\n        };\n        this.handleFileClick = this.handleFileClick.bind(this);\n        this.downloadHandle = this.downloadHandle.bind(this);\n        this.deleteHandle = this.deleteHandle.bind(this);\n    }\n\n\n    handleFileClick(e, item) {\n        const {Path, IsDir, IsBucket} = item;\n        if (IsDir || IsBucket) {\n            this.updateRemotePath(Path, IsDir, IsBucket);\n        } else {\n            this.downloadHandle(item);\n        }\n\n    }\n\n    updateRemotePath(newRemotePath, IsDir, IsBucket) {\n        const {remoteName} = this.props.currentPath;\n\n        let updateRemoteName = \"\";\n        let updateRemotePath = \"\";\n\n\n        if (IsBucket) {\n            updateRemoteName = addColonAtLast(remoteName) + newRemotePath;\n            updateRemotePath = \"\";\n            // backStack.push({remoteName: addColonAtLast(backStack.peek().remoteName) + remotePath, remotePath: \"\"});\n\n        } else if (IsDir) {\n            updateRemoteName = remoteName;\n            updateRemotePath = newRemotePath;\n            // backStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n        }\n        this.props.changePath(this.props.containerID, updateRemoteName, updateRemotePath);\n    }\n\n\n    getFilesList(showLoading = true) {\n        const {remoteName, remotePath} = this.props.currentPath;\n\n        this.props.getFiles(remoteName, remotePath);\n\n    }\n\n    async downloadHandle(item) {\n        // let {remoteName, remotePath} = this.props;\n        let {remoteName, remotePath} = this.props.currentPath;\n        const {fsInfo} = this.props;\n        let downloadUrl = \"\";\n        if (fsInfo.Features.BucketBased) {\n            downloadUrl = `/[${remoteName}]/${remotePath}/${item.Name}`;\n\n        } else {\n            downloadUrl = `/[${remoteName}:${remotePath}]/${item.Name}`;\n        }\n\n        this.setState((prevState) => {\n            return {\n                downloadingItems: prevState.downloadingItems + 1,\n                isDownloadProgress: true\n            };\n        });\n\n        let response = await axiosInstance({\n            url: downloadUrl,\n            method: 'GET',\n            responseType: 'blob',\n        });\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', item.Name);\n        document.body.appendChild(link);\n        link.click();\n\n        this.setState((prevState) => {\n            return {\n                downloadingItems: prevState.downloadingItems - 1,\n            };\n        }, () => {\n            if (this.state.downloadingItems === 0) {\n                this.setState({isDownloadProgress: false})\n            }\n        });\n    }\n\n    async deleteHandle(item) {\n        let {remoteName} = this.props.currentPath;\n\n        const data = {\n            fs: addColonAtLast(remoteName),\n            remote: item.Path,\n        };\n        try {\n            if (item.IsDir) {\n\n                await axiosInstance.post(\"/operations/purge\", data);\n\n                this.updateHandler();\n                toast.info(`${item.Name} deleted.`);\n\n            } else {\n\n                await axiosInstance.post(\"/operations/deletefile\", data);\n                this.updateHandler();\n                toast.info(`${item.Name} deleted.`, {\n                    autoClose: false\n                });\n            }\n        } catch (e) {\n            console.log(`Error in deleting file`);\n            toast.error(`Error deleting file. ${e}`, {\n                autoClose: false\n            });\n        }\n\n    }\n\n    updateHandler = () => {\n\n        const {remoteName, remotePath} = this.props.currentPath;\n        this.getFilesList(remoteName, remotePath);\n    };\n\n    dismissAlert = (e) => {\n        this.setState({isDownloadProgress: false});\n    };\n\n    getFileComponents = (filesList, remoteName, isDir, gridMode, containerID) => {\n        return filesList.map((item, idx) => {\n            let {ID, Name} = item;\n            // Using fallback as fileName when the ID is not available (for local file system)\n            if (ID === undefined) {\n                ID = Name;\n            }\n            if (item.IsDir === isDir) {\n                return (\n                    <React.Fragment key={ID}>\n                        <FileComponent item={item} clickHandler={this.handleFileClick}\n                                       downloadHandle={this.downloadHandle} deleteHandle={this.deleteHandle}\n                                       remoteName={remoteName} gridMode={gridMode} containerID={containerID}\n                        />\n                    </React.Fragment>\n                )\n            }\n            return null;\n        });\n    };\n\n\n    render() {\n        const {isLoading, isDownloadProgress, downloadingItems,} = this.state;\n        const {connectDropTarget, isOver, files, navigateUp, containerID, gridMode} = this.props;\n        const {remoteName} = this.props.currentPath;\n\n        if (isLoading || !files) {\n            return (<div><i className={\"fa fa-circle-o-notch fa-lg\"}/> Loading</div>);\n        } else {\n\n\n            if (remoteName === \"\") {\n                return (<div>No remote is selected. Select a remote from above to show files.</div>);\n            }\n\n\n            let dirComponentMap = this.getFileComponents(files, remoteName, true, gridMode);\n\n            let fileComponentMap = this.getFileComponents(files, remoteName, false, gridMode);\n\n            let renderElement = \"\";\n\n            if (gridMode === \"card\") {\n\n                renderElement = (\n                    <Container fluid={true}>\n                        <Row>\n                            <UpButtonComponent upButtonHandle={() => navigateUp(containerID)} gridMode={gridMode}/>\n                        </Row>\n\n\n                        <Row>\n                            <h3>Directories</h3>\n                        </Row>\n                        <Row>\n                            {dirComponentMap}\n                        </Row>\n\n\n                        <Row>\n                            <h3>Files</h3>\n                        </Row>\n                        <Row>\n                            {fileComponentMap}\n                        </Row>\n\n\n                    </Container>\n                )\n            } else {\n\n\n                renderElement = (\n\n                    <Container fluid={true} className={\"pd-0\"}>\n\n                        <Table>\n                            <thead>\n                            <tr>\n                                <th></th>\n                                <th>Name</th>\n                                <th>Size</th>\n                                <th>Modified</th>\n                                <th>Actions</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <UpButtonComponent upButtonHandle={() => navigateUp(containerID)} gridMode={gridMode}/>\n                            {files.length > 0 ? (\n                                    <React.Fragment>\n                                        <tr>\n                                            <td></td>\n                                            <th>Directories</th>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                        </tr>\n                                        {dirComponentMap}\n                                        <tr>\n                                            <td></td>\n                                            <th>Files</th>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                        </tr>\n                                        {fileComponentMap}\n                                    </React.Fragment>\n                                ) :\n                                <tr>\n                                    <td></td>\n                                    <td>No files</td>\n                                    <td></td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n                            }\n                            </tbody>\n                        </Table>\n                    </Container>\n\n\n                );\n            }\n\n\n            return connectDropTarget(\n                <div className={\"row\"}>\n                    {isOver && renderOverlay()}\n                    {/*<Col sm={12}>*/}\n                    {/*</Col>*/}\n\n                    <Alert color=\"info\" isOpen={isDownloadProgress} toggle={this.dismissAlert} sm={12}\n                           lg={12}>\n                        Downloading {downloadingItems} file(s). Please wait.\n                    </Alert>\n\n                    {renderElement}\n\n\n\n\n                </div>\n            );\n        }\n    }\n\n}\n\nconst propTypes = {\n    containerID: PropTypes.string.isRequired,\n    currentPath: PropTypes.object.isRequired,\n    fsInfo: PropTypes.object.isRequired,\n    gridMode: PropTypes.string\n};\n\nconst defaultProps = {\n    remotePath: \"\",\n};\n\n\nFilesView.propTypes = propTypes;\nFilesView.defaultProps = defaultProps;\n\n\nconst mapStateToProps = (state, ownProps) => {\n    const currentPath = state.explorer.currentPaths[ownProps.containerID];\n    let visibilityFilter = state.explorer.visibilityFilters[ownProps.containerID];\n    const gridMode = state.explorer.gridMode[ownProps.containerID]\n\n    let fsInfo = {};\n    const {remoteName, remotePath} = currentPath;\n\n\n    if (currentPath && state.remote.configs && state.remote.configs[currentPath.remoteName]) {\n        fsInfo = state.remote.configs[currentPath.remoteName];\n    }\n\n    let files = state.remote.files[`${remoteName}-${remotePath}`];\n\n    if (files) {\n        files = files.files;\n        if (visibilityFilter) {\n            files = changeListVisibility(files, visibilityFilter);\n        }\n    }\n\n    return {\n        files,\n        currentPath,\n        fsInfo,\n        gridMode\n    }\n};\n\nexport default compose(\n    connect(\n        mapStateToProps, {getFiles, navigateUp, changePath}\n    ),\n    DropTarget(ItemTypes.FILECOMPONENT, filesTarget, collect)\n)(FilesView)\n","import React from \"react\";\n\nfunction ScrollableDiv({height, children}) {\n    return (<div style={{overflow: \"auto\", height: height}}>\n        {children}\n    </div>)\n}\n\nexport default ScrollableDiv;\n","import React from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axiosInstance from \"../../../utils/API/API\";\nimport {toast} from \"react-toastify\";\nimport {addColonAtLast} from \"../../../utils/Tools\";\nimport {connect} from \"react-redux\";\nimport {getFilesForContainerID} from \"../../../actions/explorerStateActions\";\n\n\nclass NewFolder extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            disableForm: false\n        };\n        this.createNewFolder = this.createNewFolder.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggle = this.toggle.bind(this);\n\n    }\n\n    disableForm = (shouldDisable) => {\n        this.setState({disableForm: shouldDisable});\n    };\n\n    async createNewFolder() {\n\n        // console.log(\"Form Submitted\");\n        let {name} = this.state;\n        let {remoteName, remotePath} = this.props.currentPath;\n        const {fsInfo} = this.props;\n\n        remoteName = addColonAtLast(remoteName);\n\n        // remotePath = this.state.name;\n        try {\n            console.log(\"fsInfo\", fsInfo);\n            if (fsInfo.Features.BucketBased && remotePath === \"\") {/*Trying to create a bucket, not a dir*/\n                remoteName += name;\n            } else { /*Normal directory*/\n                if (remotePath === \"\") {\n                    remotePath = name;\n                } else {\n                    remotePath += \"/\" + name;\n                }\n            }\n            const data = {\n                fs: remoteName,\n                remote: remotePath\n            };\n\n            /*Disable form submit button*/\n            this.disableForm(true);\n\n            /*Network Request*/\n            await axiosInstance.post(\"operations/mkdir\", data);\n\n            this.disableForm(false);\n\n            this.toggle();\n            toast.info(`Folder created: ${remotePath}`)\n            this.props.getFilesForContainerID(this.props.containerID);\n        } catch (error) {\n            this.disableForm(false);\n\n            if (error.response) {\n                toast.error(`Error creating folder: ${error.response.data.error}`)\n            } else {\n                toast.error(`Error creating folder: ${error}`);\n            }\n\n            // console.log(`Error occurred at operations/mkdir: ${e}, ${e.response}`);\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.createNewFolder();\n    }\n\n    changeName = e => {\n        const value = e.target.value;\n        this.setState(\n            {name: value}\n        );\n    };\n\n    toggle() {\n        this.props.closeModal();\n    }\n\n    render() {\n        const {name, disableForm} = this.state;\n        const {isVisible} = this.props;\n        return (\n\n            <Modal isOpen={isVisible} toggle={this.toggle}>\n                <Form onSubmit={this.handleSubmit}>\n                    <ModalHeader toggle={this.toggle}>Enter the name for the folder</ModalHeader>\n                    <ModalBody>\n                        <FormGroup row>\n                            <Label for=\"folderName\" sm={3}>Enter the name</Label>\n                            <Col sm={9}>\n                                <Input type=\"text\" name=\"folderName\" id=\"folderName\" value={name}\n                                       onChange={this.changeName} required autoFocus>\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <div className=\"clearfix\">\n                            <Button type=\"submit\" color=\"success\" className=\"float-right\" disabled={disableForm}><i\n                                className=\"fa fa-check fa-lg\"/>Create folder</Button>\n                        </div>\n                        {/*<Input type={\"text\"} value={name} onChange={this.changeName}*/}\n                        {/*       ref={(input) => this.NameInput = input}/>*/}\n                    </ModalBody>\n                    <ModalFooter>\n\n                    </ModalFooter>\n                </Form>\n            </Modal>\n\n        );\n    }\n\n}\n\nconst propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    containerID: PropTypes.string.isRequired,\n    getFilesForContainerID: PropTypes.func.isRequired\n};\n\n\nNewFolder.propTypes = propTypes;\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const currentPath = state.explorer.currentPaths[ownProps.containerID];\n    let fsInfo = {};\n\n    if (currentPath && state.remote.configs && state.remote.configs[currentPath.remoteName]) {\n        fsInfo = state.remote.configs[currentPath.remoteName];\n    }\n    return {\n        currentPath,\n        fsInfo\n    }\n};\n\nexport default connect(mapStateToProps, {getFilesForContainerID})(NewFolder);","import React from 'react';\nimport {Button, Input} from \"reactstrap\";\nimport NewFolder from \"./NewFolder\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {\n    changeGridMode,\n    changeVisibilityFilter,\n    getFilesForContainerID,\n    navigateBack,\n    navigateFwd\n} from \"../../../actions/explorerStateActions\";\n\nclass FileOperations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newFolderModalIsVisible: false\n        };\n        this.filterOptions = [\"Images\", \"Pdf\", \"Videos\"];\n    }\n\n    openNewFolderModal = () => {\n        this.setState({newFolderModalIsVisible: true});\n    };\n\n    closeNewFolderModal = () => {\n        this.setState({newFolderModalIsVisible: false});\n    };\n\n    handleChangeFilter = (e) => {\n        const newFilter = e.target.value;\n\n        this.props.changeVisibilityFilter(this.props.containerID, newFilter);\n\n    };\n\n\n    handleChangeGridMode = (e) => {\n        const gridMode = e.target.value;\n\n        this.props.changeGridMode(this.props.containerID, gridMode);\n\n    };\n\n\n    render() {\n        const {containerID} = this.props;\n\n        return (\n            <div>\n                <Button color=\"light\" className={\"mr-1 btn-outline-dark\"}\n                        onClick={() => this.props.navigateBack(containerID)}><i\n                    className={\"fa fa-lg fa-angle-left\"}/></Button>\n                <Button color=\"light\" className={\"mr-1 btn-outline-dark\"}\n                        onClick={() => this.props.navigateFwd(containerID)}><i\n                    className={\"fa fa-lg fa-angle-right\"}/></Button>\n\n                <div className=\"float-right mb-3 mt-1 form-inline\">\n                    <Button className=\"mr-1 btn-outline-dark\" onClick={this.openNewFolderModal}><i\n                        className={\"fa fa-lg fa-plus\"}/> </Button>\n\n                    <Button className=\"mr-1 btn-outline-dark\"\n                            onClick={() => this.props.getFilesForContainerID(containerID)}><i\n                        className={\"fa fa-lg fa-repeat\"}/></Button>\n\n                    <NewFolder containerID={this.props.containerID} isVisible={this.state.newFolderModalIsVisible}\n                               closeModal={this.closeNewFolderModal}/>\n\n\n                    <Input type={\"select\"} onChange={this.handleChangeFilter} value={this.props.visibilityFilter}\n                           className=\"ml-1 mr-1\">\n                        <option key={0}>None</option>\n                        {\n                            this.filterOptions.map((item, idx) => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                    </Input>\n                    <Input type={\"select\"} onChange={this.handleChangeGridMode} value={this.props.gridMode}>\n                        <option value={\"grid\"}>Grid</option>\n                        <option value={\"card\"}>Card</option>\n                    </Input>\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nFileOperations.propTypes = {\n    containerID: PropTypes.string.isRequired,\n    changeVisibilityFilter: PropTypes.func.isRequired,\n    visibilityFilter: PropTypes.string,\n    gridMode: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    visibilityFilter: state.explorer.visibilityFilters[ownProps.containerID],\n    gridMode: state.explorer.gridMode[ownProps.containerID]\n\n\n});\n\n\nexport default connect(mapStateToProps, {changeVisibilityFilter, changeGridMode, navigateBack, navigateFwd, getFilesForContainerID})(FileOperations);","import React from 'react';\nimport {Card, CardBody, CardHeader} from \"reactstrap\";\nimport RemotesList from \"../RemotesList\";\nimport FilesView from \"../FilesView/FilesView\";\nimport ScrollableDiv from \"../../Base/ScrollableDiv/ScrollableDiv\";\nimport {addColonAtLast} from \"../../../utils/Tools\";\nimport {connect} from \"react-redux\";\nimport {getFsInfo} from \"../../../actions/explorerActions\";\nimport PropTypes from 'prop-types';\nimport {\n    changePath,\n    changeRemoteName,\n    changeRemotePath,\n    createPath,\n    navigateBack,\n    navigateFwd,\n    navigateUp\n} from \"../../../actions/explorerStateActions\";\nimport FileOperations from \"../../Base/NewFolder/FileOperations\";\n\n\nclass RemoteExplorer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // remoteName: \"\",\n            // remotePath: \"\",\n            remoteNameTemp: \"\"\n        };\n\n\n        this.updateRemoteName = this.updateRemoteName.bind(this);\n        this.updateRemotePath = this.updateRemotePath.bind(this);\n\n    }\n\n    getFsInfo() {\n\n        const {remoteName} = this.props.currentPath;\n        if (!this.props.configs[remoteName])\n            this.props.getFsInfo(remoteName);\n\n    }\n\n    updateRemoteName(remoteName) {\n        this.setState({remoteNameTemp: remoteName});\n    }\n\n\n\n\n    updateRemotePath(newRemotePath, IsDir, IsBucket) {\n        const {remoteName} = this.props.currentPath;\n\n        let updateRemoteName = \"\";\n        let updateRemotePath = \"\";\n\n        if (IsBucket) {\n            updateRemoteName = addColonAtLast(remoteName) + newRemotePath;\n            updateRemotePath = \"\";\n\n        } else if (IsDir) {\n            updateRemoteName = remoteName;\n            updateRemotePath = newRemotePath;\n        }\n        this.props.changePath(this.props.containerID, updateRemoteName, updateRemotePath);\n    }\n\n\n\n    render() {\n\n\n        const {remoteName, remotePath} = this.props.currentPath;\n        const {containerID} = this.props;\n\n        const pathBreadCrumbs = remotePath.split('/');\n\n        console.log(pathBreadCrumbs);\n\n\n        pathBreadCrumbs.map((item, idx) => {\n            return (<li key={idx}\n                        className={[\"breadcrumb-item \", idx === pathBreadCrumbs.length ? \"active\" : \"\"]}> / {item}</li>)\n        });\n\n        return (\n            <React.Fragment>\n                {/*Render remotes array*/}\n\n                <Card>\n                    <CardHeader>Remotes</CardHeader>\n                    <CardBody>\n\n\n                        <RemotesList\n                            remoteName={remoteName}\n                            containerID={containerID}\n                        />\n\n                    </CardBody>\n                </Card>\n\n                {/*Render the files in the selected remote*/}\n                <Card>\n                    <CardHeader>\n                        <nav aria-label=\"breadcrumb\">\n                            <ol className=\"breadcrumb\">\n                                <li className=\"breadcrumb-item active\">{remoteName}:/</li>\n\n                                {pathBreadCrumbs}\n                                <li className=\"breadcrumb-menu\">\n                                    <div className=\"btn-group\" role=\"group\"\n                                         aria-label=\"Button group with nested dropdown\">\n                                        {/*<a className=\"btn\" href=\"#\"><i className=\"cui-speech\"></i></a>*/}\n                                        {/*<a className=\"btn\" href=\"#\"><i className=\"cui-graph\"></i> Dashboard</a>*/}\n                                        <span className=\"btn\"><i className=\"cui-settings\"></i> Settings</span>\n                                    </div>\n                                </li>\n                            </ol>\n                            <FileOperations containerID={containerID}/>\n\n                        </nav>\n                    </CardHeader>\n                    <CardBody>\n                        <ScrollableDiv height={\"700px\"}>\n                            <FilesView containerID={containerID}/>\n                        </ScrollableDiv>\n                    </CardBody>\n                </Card>\n            </React.Fragment>\n        );\n\n    }\n\n}\n\n\nconst propTypes = {\n\n    containerID: PropTypes.string.isRequired,\n    createPath: PropTypes.func.isRequired,\n    currentPath: PropTypes.shape({\n        remoteName: PropTypes.string.isRequired,\n        remotePath: PropTypes.string.isRequired\n    })\n};\n\nconst defaultProps = {};\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const currentPath = state.explorer.currentPaths[ownProps.containerID];\n    let fsInfo = {};\n\n    if (currentPath && state.remote.configs && state.remote.configs[currentPath.remoteName]) {\n        fsInfo = state.remote.configs[currentPath.remoteName];\n    }\n    return {\n        configs: state.remote.configs,\n        hasError: state.remote.hasError,\n        error: state.remote.error,\n        currentPath: state.explorer.currentPaths[ownProps.containerID],\n        fsInfo\n    }\n};\n\nRemoteExplorer.propTypes = propTypes;\nRemoteExplorer.defaultProps = defaultProps;\n\nexport default connect(\n    mapStateToProps,\n    {\n        getFsInfo, createPath, changePath,\n        changeRemoteName, changeRemotePath, navigateUp,\n        navigateBack, navigateFwd\n    }\n)(RemoteExplorer);\n","import React from \"react\";\nimport {Button, Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\nimport RemoteExplorer from \"../RemoteExplorer\";\n\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport {DragDropContext} from \"react-dnd\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {createPath} from \"../../../actions/explorerStateActions\";\nimport PropTypes from 'prop-types';\n\n\nfunction RemoteExplorerList({cols, backStacks}) {\n    let remoteExplorers = [];\n    const lgSize = 12 / cols;\n    for (let i = 0; i < cols; i++) {\n\n        remoteExplorers.push((\n            <Col xs={12} sm={12} lg={lgSize} key={i}>\n                <RemoteExplorer containerID={i.toString()}/>\n            </Col>\n        ));\n    }\n    return remoteExplorers;\n}\n\nclass RemoteExplorerLayout extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cols: 1\n        };\n\n        this.props.createPath(\"0\");\n        this.changeLayout = this.changeLayout.bind(this);\n    }\n\n    changeLayout(nos, mode) {\n        // console.log(\"changing layout\");\n        if (mode === \"side\") {\n            for (let i = 0; i < nos; i++) {\n                if (!this.props.backStacks[i.toString()])\n                    this.props.createPath(i.toString())\n            }\n            this.setState({cols: nos});\n\n        }\n\n\n    }\n\n    render() {\n\n        /*Divide the 12 bootstrap columns to fit number of explorers*/\n        const {cols} = this.state;\n\n        return (\n            <React.Fragment>\n                <Row className={\"d-none d-lg-block\"}>\n                    <Col sm={12} lg={12}>\n                        <Card>\n                            <CardHeader>\n                                Choose Layout\n                            </CardHeader>\n                            <CardBody>\n                                <Button color={\"primary\"} className={\"ml-2\"}\n                                        onClick={() => this.changeLayout(1, \"side\")}>1 - side by side</Button>\n                                <Button color={\"primary\"} className={\"ml-2\"}\n                                        onClick={() => this.changeLayout(2, \"side\")}>2 - side by side</Button>\n                                <Button color={\"primary\"} className={\"ml-2\"}\n                                        onClick={() => this.changeLayout(3, \"side\")}>3 - side by side</Button>\n                                <Button color={\"primary\"} className={\"ml-2\"}\n                                        onClick={() => this.changeLayout(4, \"side\")}>4 - side by side</Button>\n                                {/*<Button onClick={this.changeLayout(4,\"grid\")}>4 - grid</Button>*/}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <RemoteExplorerList cols={cols} backStacks={this.props.backStacks}/>\n                </Row>\n            </React.Fragment>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = (state) => ({\n    backStacks: state.explorer.backStacks\n});\n\nRemoteExplorerLayout.propTypes = {\n    backStacks: PropTypes.object.isRequired\n};\n\nexport default compose(\n    DragDropContext(HTML5Backend),\n    connect(mapStateToProps, {createPath})\n)(RemoteExplorerLayout);"],"sourceRoot":""}