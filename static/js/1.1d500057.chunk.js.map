{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/reactstrap/es/Row.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","form","Row","props","Tag","attributes","classes","createElement","defaultProps","__webpack_exports__","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","CardBody","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","process","d","Doughnut","Line","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","source","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","webpackPolyfill","deprecate","paths","children","defineProperty","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","CardHeader"],"mappings":"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","file":"static/js/1.1d500057.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}