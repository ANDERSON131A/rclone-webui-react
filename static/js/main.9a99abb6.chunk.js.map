{"version":3,"sources":["actions/types.js","utils/Constants.js","polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/providerStatusReducer.js","reducers/userActionsReducer.js","reducers/index.js","utils/StateLoader.js","throttled.js","store.js","index.js","utils/API/API.js","utils/Tools.js"],"names":["__webpack_require__","d","__webpack_exports__","FETCH_STATUS","GET_PROVIDERS","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_CONFIG_DUMP","GET_FILES_LIST","CHANGE_PATH","CREATE_PATH","CHANGE_REMOTE_NAME","CHANGE_REMOTE_PATH","NAVIGATE_UP","NAVIGATE_FWD","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","SIGNOUT_REQUEST","CHANGE_SEARCH_QUERY","GET_REMOTE_ABOUT","SET_BANDWIDTH","GET_BANDWIDTH","ENABLE_STATUS_CHECK","CHANGE_USER_NAME_PASSWORD","CHANGE_IP_ADDRESS","CHANGE_AXIOS_INTERCEPTOR","REQUEST_ERROR","REQUEST_SUCCESS","visibilityFilteringOptions","STATUS_REFRESH_TIMEOUT","NEW_DRIVE_CONFIG_REFRESH_TIMEOUT","MODAL_ROOT_ELEMENT","USER_NAME_KEY","PASSWORD_KEY","IP_ADDRESS_KEY","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Promise","all","e","then","bind","Login","Register","Page404","Page500","App","react_default","a","createElement","data-test","react_toastify","react_router_dom","Suspense","fallback","className","react_router","exact","path","name","render","props","Component","Boolean","location","hostname","match","initialState","isConnected","jobs","speed","runningAvgSpeed","checkStatus","bandwidth","providers","configDump","hasError","configs","remotes","files","Stack","Object","classCallCheck","this","items","remoteName","remotePath","count","item","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","about","auth","userName","password","ipAddress","interceptor","appReducer","combineReducers","status","state","arguments","length","action","type","curSpeed","payload","cma","totalElements","objectSpread","concat","toConsumableArray","elapsedTime","speedAvg","error","config","remote","defineProperty","time","Date","filesList","explorer","id","data","visibilityFilter","searchQuery","indexOf","current","console","log","splitPath","split","i","moveForward","filter","mode","providerStatus","user","localStorage","setItem","axiosInstance","interceptors","request","eject","interceptorID","use","headers","Authorization","btoa","getItem","baseURL","reject","rootReducer","clear","StateLoader","createClass","key","value","serializedState","initializeState","JSON","parse","err","stringify","throttled","middleware","thunk","_ref","getState","dispatch","next","meta","throttle","setTimeout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","apply","subscribe","saveState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","create","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","Name","IsDir","performCopyOrMoveFile","performCopyFile","_callee","url","splitRes","_data","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","isLocalRemoteName","_async","post","abrupt","sent","stop","isEmpty","obj","Array","isArray","hasOwnProperty","bytesToKB","bytes","bytesToGB","formatBytes","decimals","dm","Math","floor","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","find","ele","idx","array","Prefix","addColonAtLast","changeListVisibility","changeSearchFilter","visibilityAssociation","Images","Pdf","list","acceptType","MimeType","toLowerCase","startsWith"],"mappings":"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","file":"static/js/main.9a99abb6.chunk.js","sourcesContent":["export const FETCH_STATUS = 'FETCH_STATUS';\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\nexport const CHANGE_PATH = 'CHANGE_PATH';\nexport const CREATE_PATH = 'CREATE_PATH';\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const GET_REMOTE_ABOUT = 'GET_REMOTE_ABOUT';\nexport const CREATE_PUBLIC_LINK = 'CREATE_PUBLIC_LINK';\nexport const GET_RUNNING_JOBS = 'GET_RUNNING_JOBS';\nexport const GET_STATUS_FOR_RUNNING_JOB = 'GET_STATUS_FOR_RUNNING_JOB';\nexport const SET_BANDWIDTH = 'SET_BANDWIDTH';\nexport const GET_BANDWIDTH = 'GET_BANDWIDTH';\nexport const ENABLE_STATUS_CHECK = 'ENABLE_STATUS_CHECK';\nexport const CHANGE_USER_NAME_PASSWORD = 'CHANGE_USER_NAME_PASSWORD';\nexport const CHANGE_IP_ADDRESS = 'CHANGE_IP_ADDRESS';\nexport const CHANGE_AXIOS_INTERCEPTOR = 'CHANGE_AXIOS_INTERCEPTOR';\n\n\n\n\n\nexport const REQUEST_ERROR = 'error';\nexport const REQUEST_SUCCESS = 'success';\n","/**\n * Returns a string array with possible filtering options.\n * @type {string[]}\n */\nexport const visibilityFilteringOptions = [\"Images\", \"Pdf\", \"Videos\"];\n\n/**\n * Refresh timeout for checking backend status.\n * In milliseconds.\n * @type {number}\n */\nexport const STATUS_REFRESH_TIMEOUT = 1000 * 5;\n/**\n * Refresh timeout for checking if the config is created.\n * In milliseconds.\n * @type {number}\n */\nexport const NEW_DRIVE_CONFIG_REFRESH_TIMEOUT = 1000;\nexport const MODAL_ROOT_ELEMENT = \"modal-root\";\n\nexport const USER_NAME_KEY = \"userName\";\nexport const PASSWORD_KEY = \"password\";\nexport const IP_ADDRESS_KEY = \"ipAddress\";","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es/set'\nimport 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div data-test=\"appComponent\">\n                <ToastContainer/>\n                <HashRouter>\n                    <React.Suspense fallback={loading()}>\n                        <Switch>\n                            <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\n                            <Route exact path=\"/register\" name=\"Register Page\"\n                                   render={props => <Register {...props}/>}/>\n                            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\n                            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\n                            <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\n                        </Switch>\n                    </React.Suspense>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {\n    ENABLE_STATUS_CHECK,\n    FETCH_STATUS,\n    GET_BANDWIDTH,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS,\n    SET_BANDWIDTH\n} from \"../actions/types\";\n\nconst initialState = {\n    isConnected: false,\n    jobs: {},\n    speed: [],\n    runningAvgSpeed: 0,\n    checkStatus: true,\n    bandwidth: {}\n};\n/**\n * Specifies reducers for status check of the rclone backend.\n * @param state\n * @param action\n * @returns {({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{isConnected: boolean, error: *})|{checkStatus: boolean, bandwidth: {}, jobs: {}, isConnected: boolean, runningAvgSpeed: number, speed: Array}|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{bandwidth: *})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{jobs: *, isConnected: boolean, runningAvgSpeed: number, speed: *[]})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{checkStatus: *})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_STATUS:\n\n            if (action.status === REQUEST_SUCCESS) {\n                const curSpeed = action.payload.speed;\n                let cma = state.runningAvgSpeed;\n                let totalElements = state.speed.length;\n                if (!totalElements) totalElements = 1;\n                let runningAvgSpeed = cma + ((curSpeed - cma) / 50);\n\n\n                return {\n                    ...state,\n                    jobs: action.payload,\n                    runningAvgSpeed,\n                    speed: [...state.speed, {\n                        elapsedTime: action.payload.elapsedTime,\n                        speed: action.payload.speed,\n                        speedAvg: runningAvgSpeed\n                    }],\n                    isConnected: true\n                };\n            }\n            if (action.status === REQUEST_ERROR) {\n                return {\n                    ...state,\n                    error: action.payload,\n                    isConnected: false\n                };\n            }\n            break;\n        case ENABLE_STATUS_CHECK:\n            return {\n                ...state,\n                checkStatus: action.payload\n            };\n        case SET_BANDWIDTH:\n        case GET_BANDWIDTH:\n            return {\n                ...state,\n                bandwidth: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    providers: [],\n    configDump: {},\n    hasError: false,\n};\n/**\n * Specifies redux reduce operations for the config module.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {({hasError, providers, configDump}&{providers: *})|({hasError, providers, configDump}&{hasError: boolean, error: *})|({hasError, providers, configDump}&{hasError: boolean, configDump: *})|{hasError: boolean, providers: Array, configDump: {}}}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return {\n                ...state,\n                providers: action.payload,\n            };\n\n        case GET_CONFIG_DUMP:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configDump: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    hasError: true,\n                    error: action.payload\n                };\n            break;\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_FOR_REMOTE, GET_FILES_LIST, GET_REMOTE_LIST, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    configs: {},\n    remotes: [],\n    files: {},\n    hasError: false\n};\n/**\n * Specifies the explorer specific reducers for the redux actions.\n * @param state\n * @param action\n * @returns {{configs: {}, remotes: Array, files: {}, hasError: boolean}|({configs, remotes, files, hasError}&{files: (initialState.files|{})})|({configs, remotes, files, hasError}&{files: (initialState.files|{}), hasError: boolean})|({configs, remotes, files, hasError}&{hasError: boolean, error: *})|({configs, remotes, files, hasError}&{configs: ((initialState.configs&*)|({}&*)), hasError: boolean})|({configs, remotes, files, hasError}&{remotes: *, hasError: boolean})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CONFIG_FOR_REMOTE:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configs: {...state.configs, ...action.payload},\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_REMOTE_LIST:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    remotes: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_FILES_LIST:\n            if (action.status === REQUEST_SUCCESS) {\n                return {\n                    ...state,\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\n                    hasError: false\n                }\n            }\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    files: {...state.files,\n                        [action.payload.path]: {\n                            time: new Date(),\n                            files: [],\n                            hasError: true,\n                            error: action.payload.error\n                        }\n                    }\n                };\n            break;\n        default:\n            return state;\n    }\n\n}","// A very simple stack implementation to handle back links in remote explorer\nclass Stack  {\n    constructor() {\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\n        this.count = 1;\n    }\n\n    getLength() {\n        return this.count;\n    }\n\n    push(item) {\n        this.items.push(item);\n        this.count = this.count + 1;\n    }\n\n    pop() {\n        if (this.count > 0) {\n            this.count = this.count - 1;\n        }\n\n        return this.items.pop();\n    }\n\n    peek() {\n        return this.items.slice(-1)[0];\n    }\n\n    empty() {\n        this.items = [];\n        this.count = 0;\n    }\n\n    moveBack() {\n\n        if (this.getLength() > 1)\n            return this.pop();\n    }\n}\n\nexport default Stack;","import Stack from './Stack'\n\n// A very simple stack implementation to handle back links in remote explorer\nclass BackStack {\n    constructor() {\n        this.backStack = new Stack();\n        this.forwardStack = new Stack();\n    }\n\n    getLength() {\n        return this.backStack.getLength();\n    }\n\n    push(item) {\n\n        this.backStack.push(item);\n        this.forwardStack.empty();\n\n    }\n\n    pop() {\n        const temp = this.backStack.pop();\n        return temp;\n    }\n\n    peek() {\n        return this.backStack.peek();\n    }\n\n    empty() {\n        this.backStack.empty();\n        this.forwardStack.empty();\n    }\n\n    moveBack() {\n        const temp = this.backStack.moveBack();\n        if(temp)\n            this.forwardStack.push(temp);\n        return temp;\n    }\n\n    moveForward(){\n        const temp = this.forwardStack.pop();\n        if(temp){\n            //Pop was successful\n            this.backStack.push(temp);\n        }\n        return temp;\n\n    }\n\n\n\n}\n\nexport default BackStack;","import {\n    CHANGE_GRID_MODE,\n    CHANGE_PATH,\n    CHANGE_REMOTE_NAME,\n    CHANGE_REMOTE_PATH,\n    CHANGE_SEARCH_QUERY,\n    CHANGE_VISIBILITY_FILTER,\n    CREATE_PATH,\n    NAVIGATE_BACK,\n    NAVIGATE_FWD,\n    NAVIGATE_UP\n} from \"../actions/types\";\nimport BackStack from \"../utils/classes/BackStack\";\n\nconst initialState = {\n    backStacks: {},\n    currentPaths: {},\n    visibilityFilters: {},\n    gridMode: {},\n    searchQueries: {},\n};\n\n/**\n * Specifies the reducers for explorer state manipulation.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {{currentPaths: {}, visibilityFilters: {}, gridMode: {}, searchQueries: {}, backStacks: {}}|({currentPaths, visibilityFilters, gridMode, searchQueries, backStacks}&{currentPaths: (initialState.currentPaths|{}), visibilityFilters: (initialState.visibilityFilters|{}), gridMode: (initialState.gridMode|{}), searchQueries: (initialState.searchQueries|{}), backStacks: (initialState.backStacks|{})})}\n */\nexport default function (state = initialState, action) {\n\n    const id = action.id;\n    // console.log(action.type);\n    if (id) {\n\n        let backStack = state.backStacks[id];\n        // console.log(backStack, backStack instanceof BackStack);\n        if (!backStack || !(backStack instanceof BackStack)) {\n            // console.log(\"Creating new backstack\");\n            backStack = new BackStack();\n        }\n\n\n        // let arrayLen = array.length - 1 ;\n\n        let remoteName = action.remoteName;\n        let remotePath = action.remotePath;\n\n        if (!remoteName) remoteName = \"\";\n        if (!remotePath) remotePath = \"\";\n        const data = {\n            remoteName: remoteName,\n            remotePath: remotePath\n        };\n\n        let visibilityFilter = state.visibilityFilters[id];\n        let gridMode = state.gridMode[id];\n\n        let searchQuery = \"\";\n\n\n        switch (action.type) {\n            case CHANGE_PATH:\n                backStack.push(data);\n                break;\n\n            case CHANGE_REMOTE_NAME:\n                // console.log(\"CHange remote name\", remoteName, remotePath)\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\n                    remotePath = remoteName;\n                    remoteName = \"/\";\n\n                } else {\n                    remotePath = \"\";\n                }\n                backStack.empty();\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CHANGE_REMOTE_PATH:\n                backStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CREATE_PATH:\n                backStack = new BackStack();\n                break;\n\n            case NAVIGATE_UP:\n                // TODO: Write logic for up, which will navigate one directory up\n                let current = backStack.peek();\n                console.log(current);\n\n                if (current.remotePath && current.remotePath !== \"\") {\n                    const splitPath = current.remotePath.split('/');\n                    current.remotePath = \"\";\n                    if (splitPath.length > 1)\n                        for (let i = 0; i < splitPath.length - 1; i++) {\n                            current.remotePath = current.remotePath + ((i !== 0) ? '/' : '') + splitPath[i];\n                        }\n                }\n                console.log(current);\n                backStack.push(current);\n                break;\n\n            case NAVIGATE_FWD:\n                // if(ptr < array.length){\n                //     ptr--;\n                // }\n                backStack.moveForward();\n                break;\n\n            case NAVIGATE_BACK:\n                // console.log(backStack);\n                backStack.moveBack();\n                break;\n            case CHANGE_VISIBILITY_FILTER:\n                if (action.filter)\n                    visibilityFilter = action.filter;\n                break;\n            case CHANGE_GRID_MODE:\n                if (action.mode) {\n                    gridMode = action.mode;\n                }\n                break;\n\n            case CHANGE_SEARCH_QUERY:\n                searchQuery = action.searchQuery;\n                break;\n            default:\n                break;\n        }\n        // currentPath = backStack.peek();\n        return {\n            ...state,\n            backStacks: {...state.backStacks, [id]: backStack},\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\n            gridMode: {...state.gridMode, [id]: gridMode},\n            searchQueries: {...state.searchQueries, [id]: searchQuery}\n        };\n    } else {\n        // console.error(\"ID is unexpectedly null\");\n        return state;\n    }\n\n\n};\n","import {GET_REMOTE_ABOUT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    about: {}\n};\n/**\n * Specifies reducers for getting information about the current providers.\n * @param state\n * @param action\n * @returns {{about: {}}|({about}&{about: (initialState.about|{})})}\n */\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_REMOTE_ABOUT:\n            if (action.status === REQUEST_SUCCESS) {\n                return {...state, about: {...state.about, [action.id]: action.payload}};\n            } else if (action.status === REQUEST_ERROR) {\n                // console.log(\"Error occurred\");\n                return state;\n            }\n            break;\n\n        default:\n            return state;\n\n    }\n}","import {CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS, CHANGE_USER_NAME_PASSWORD} from \"../actions/types\";\nimport axiosInstance from \"../utils/API/API\";\nimport {IP_ADDRESS_KEY, PASSWORD_KEY, USER_NAME_KEY} from \"../utils/Constants\";\n\nconst initialState = {\n    auth: {userName: \"\", password: \"\", ipAddress: \"http://localhost:5572\", interceptor: \"\"}\n};\n\n/**\n * Specifies reducers for user actions like change username, password, ipAddress etc.\n * @param state\n * @param action\n * @returns {{auth: {password: string, ipAddress: string, userName: string}}|({auth}&{auth: ((initialState.auth&*)|({password, ipAddress, userName}&*))})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_USER_NAME_PASSWORD:\n        case CHANGE_IP_ADDRESS:\n            state = {\n                ...state,\n                auth: {...state.auth, ...action.payload}\n            };\n            localStorage.setItem(USER_NAME_KEY, state.auth.userName);\n            localStorage.setItem(PASSWORD_KEY, state.auth.password);\n            localStorage.setItem(IP_ADDRESS_KEY, state.auth.ipAddress);\n            return state;\n        case CHANGE_AXIOS_INTERCEPTOR:\n            if (state.auth.interceptor)\n                axiosInstance.interceptors.request.eject(state.auth.interceptor);\n\n            const interceptorID = axiosInstance.interceptors.request.use(\n                config => {\n                    config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem(USER_NAME_KEY) + \":\" + localStorage.getItem(PASSWORD_KEY));\n                    config.baseURL = localStorage.getItem(\"ipAddress\");\n                    return config;\n                },\n                error => Promise.reject(error)\n            );\n            return {\n                ...state,\n                auth: {...state.auth, interceptor: interceptorID}\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\n\nimport statusReducer from './statusReducer';\nimport configReducer from \"./configReducer\";\nimport explorerReducer from \"./explorerReducer\";\nimport explorerState from \"./explorerStateReducer\";\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\nimport providerStatusReducer from \"./providerStatusReducer\";\nimport userActionsReducer from \"./userActionsReducer\";\n\n/**\n * Configures the root reducer to be executed before any other reducers configured in the system.\n * This involves actions for clearing the localStorage and state when user signs out.\n * @param state\n * @param action\n * @returns {any}\n */\nconst rootReducer = (state, action) => {\n    if (action.type === SIGNOUT_REQUEST) {\n        localStorage.clear();\n        state = undefined;\n    }\n\n    return appReducer(state, action);\n};\n\n/**\n * List of reducers to be configured. The reducers are called one by one from top to bottom.\n * @type {Reducer<any>}\n */\nconst appReducer = combineReducers({\n    status: statusReducer,\n    config: configReducer,\n    remote: explorerReducer,\n    explorer: explorerState,\n    providerStatus: providerStatusReducer,\n    user: userActionsReducer\n    // remoteOps: remoteOpsReducer\n});\n\nexport default rootReducer;","// Used to persist redux-state to the localStorage.\nexport class StateLoader {\n\n    /**\n     * It loads the redux state from the local store.\n     * @returns {{}|any}\n     */\n    loadState() {\n        try {\n            let serializedState = localStorage.getItem(\"curState\");\n\n            if (serializedState === null) {\n                return this.initializeState();\n            }\n\n            return JSON.parse(serializedState);\n        } catch (err) {\n            return this.initializeState();\n        }\n    }\n\n    /**\n     * Saves the current state to the localStore with variable name curState.\n     * BEWARE: Uses expensive operation JSON.stringify(). May cause performance issues. Any alternative is welcome.\n     * @param state {$ObjMap} The current state to be saved.\n     */\n    saveState(state) {\n        try {\n            let serializedState = JSON.stringify(state);\n            localStorage.setItem(\"curState\", serializedState);\n\n        } catch (err) {\n        }\n    }\n\n    /**\n     * Initializes the redux state with an empty map {}.\n     * @returns {{}}\n     */\n    initializeState() {\n        return {\n            //state object\n        }\n    };\n}\n","const throttled = {};\n\nexport default ({getState, dispatch}) => next => action => {\n    const time = action.meta && action.meta.throttle;\n\n    if (!time)\n        return next(action);\n\n    if (throttled[action.type]) {\n        return;\n    }\n\n    throttled[action.type] = true;\n\n    setTimeout(() => {\n        throttled[action.type] = false;\n    }, time);\n\n    next(action);\n}","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport {StateLoader} from \"./utils/StateLoader\";\nimport throttledMiddleware from './throttled';\n\n// const initalState = {};\n\nexport const middleware = [thunk, throttledMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst stateLoader = new StateLoader();\n\nconst store = createStore(rootReducer,\n    stateLoader.loadState(),\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    ));\n\n//Function to persist store data to localStorage\nstore.subscribe(() => {\n    stateLoader.saveState(store.getState());\n});\n\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\nimport {IP_ADDRESS_KEY, PASSWORD_KEY, USER_NAME_KEY} from \"../Constants\";\n\n/**\n * Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\n */\nlet axiosInstance = axios.create({\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n/**\n * Interceptor adds basic authentication to every axios request.\n */\naxiosInstance.interceptors.request.use(\n    config => {\n        config.baseURL = localStorage.getItem(IP_ADDRESS_KEY);\n        config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem(USER_NAME_KEY) + \":\" + localStorage.getItem(PASSWORD_KEY));\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = \"/sync/move\";\n        } else {\n            url = \"/operations/movefile\";\n        }\n    } else {\n        if (IsDir) {\n            url = \"/sync/copy\";\n        } else {\n            url = \"/operations/copyfile\";\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        const data = {\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n            _async: true\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        const data = {\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n            _async: true\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\nexport default axiosInstance;\n","/**\n * Returns whether the passed in object (obj) is empty or it contains some entries.\n * @param obj {$ObjMap} An object to check if it is empty: it can be an array or a map.\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts bytes into MB.\n * @param bytes {number} bytes to be converted.\n * @returns {number}\n */\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes to KB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\n/**\n * Converts bytes to GB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes per second to Megabytes per second.\n * @param bps {number} bytes per second.\n * @returns {number}\n */\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\n/**\n * Format bytes to a human readable format.\n * @param bytes {number} bytes to be formatted.\n * @param decimals {number} specifies the precision of numbers after the decimal point.\n * @returns {string}\n */\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Converts time in seconds to a minute and hour string of the format \"HH:MM:SS hrs\"\n * @param seconds {number} Number of seconds since 00:00:00\n * @returns {string}\n */\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\n/**\n * Converts seconds to a human readable string with support for year, day, week, minute, seconds.\n * @param seconds\n * @returns {string}\n */\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\n/**\n * Base validator takes in a regex exp and tests an input str against that regex.\n * @param regex\n * @param str\n * @returns {boolean | * | never}\n */\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n/**\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\n * @param str {string} String to be validated\n * @returns {boolean|*|never}\n */\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate integer without decimal points (0-9)\n * @param str {number|string} The string to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate duration hours, minutes, seconds, milliseconds etc.\n * @param str {number|string} The duration to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\n/**\n * Opens the specified URL in a new tab and focus on it.\n * @param url {string} URL to be opened.\n */\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/**\n * Helper function for finding the provider with a given prefix.\n * @param config {$ObjMap} Array of remote configs\n * @param name {string} Specifies the name of the provider to find.\n * @returns {*}\n */\n\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\n\n/**\n * Helper function to add semicolon to the last.\n * Behaviour: if the passed in string does not have a semicolon at last, then insert it.\n * If there is a semicolon in the middle, skip insertion.\n * @param name\n * @returns {string}\n */\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\n/**\n * Allowed types for visibility Status modification in file explorer.\n * @type {{Pdf: string, Images: string}}\n */\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n/**\n * Function to filter the list of files based on the provided visibility status.\n * @param list {$ObjMap}\n * @param filter {string} Specifies the type of files to display eg: Images, Pdf etc.\n * @param checkList {$ObjMap} Provides mimeType matches for every string visibility operation eg: Images: \"image/jpeg\"\n * @returns {$ObjMap}\n */\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Function to filter the list of files based on the provided search query.\n * Uses linear search for filtering the relevant files.\n * @param list\n * @param searchQuery\n * @returns {*}\n */\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Checks whether the remoteName is local or not. Returns true if it is a remote local path, false otherwise.\n * Behaviour: if the name starts with \"/\" it is a local name.\n * @param remoteName {string} Name of the remote to check for.\n * @returns {boolean}\n */\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}"],"sourceRoot":""}