{"version":3,"sources":["_nav.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["_nav","items","name","url","icon","MyDashboard","React","lazy","Promise","all","__webpack_require__","e","then","bind","Home","ShowConfig","RemoteExplorerLayout","routes","path","exact","component","DefaultAside","DefaultFooter","DefaultHeader","DefaultLayout","loading","react_default","a","createElement","className","preventDefault","localStorage","clear","this","props","history","push","getItem","_this2","data-test","es","fixed","react","fallback","onLogout","signOut","display","Object","assign","navConfig","navigation","appRoutes","Container","fluid","react_router","map","route","idx","key","render","from","to","Component","connect","state","isConnected","status"],"mappings":"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","file":"static/js/20.c3c87c5f.chunk.js","sourcesContent":["export default {\n    items: [\n        {\n            name: 'Dashboard',\n            url: '/dashboard',\n            icon: 'icon-speedometer'\n        },\n        {\n            name: 'Configs',\n            url: '/showconfig',\n            icon: 'icon-note'\n        },\n        {\n            name: 'Explorer',\n            url: '/remoteExplorer',\n            icon: 'icon-screen-desktop'\n        },\n        {\n            name: 'Log Out',\n            url: '/login',\n            icon: 'icon-star',\n        },\n    ],\n};\n","import React from 'react';\n\nconst MyDashboard = React.lazy(() => import('./views/RemoteManagement/NewDrive'));\nconst Home = React.lazy(() => import('./views/Home'));\nconst ShowConfig = React.lazy(() => import('./views/RemoteManagement/ShowConfig'));\nconst RemoteExplorerLayout = React.lazy(() => import(\"./views/Explorer/RemoteExplorerLayout\"))\nconst Login = React.lazy(() => import(\"./views/Pages/Login\"))\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\n// Define the routes as required\nconst routes = [\n    {path: '/', exact: true, name: 'Home'},\n    {path: '/newdrive', exact: true, name: 'New Drive', component: MyDashboard},\n    {path: '/login', exact: true, name: 'New Drive', component: Login},\n    {path: '/dashboard', name: 'Dashboard', component: Home},\n    {path: '/showconfig', name: 'Configs', component: ShowConfig},\n    {path: '/remoteExplorer/:remoteName/:remotePath', exact: true, name: 'Explorer', component: RemoteExplorerLayout},\n    {path: '/remoteExplorer', name: 'Explorer', component: RemoteExplorerLayout},\n\n];\n\nexport default routes;\n","import React, {Component, Suspense} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {Container} from 'reactstrap';\n\nimport {\n    AppAside,\n    AppBreadcrumb,\n    AppFooter,\n    AppHeader,\n    AppSidebar,\n    AppSidebarFooter,\n    AppSidebarForm,\n    AppSidebarHeader,\n    AppSidebarMinimizer,\n    AppSidebarNav,\n} from '@coreui/react';\n// sidebar nav config\nimport navigation from '../../_nav';\n// routes config\nimport routes from '../../routes';\nimport {connect} from \"react-redux\";\n\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component {\n\n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n    signOut(e) {\n        e.preventDefault();\n        localStorage.clear();\n\n        this.props.history.push('/login')\n    }\n\n\n    componentWillMount() {\n        if (!localStorage.getItem('username') || !localStorage.getItem('password')) {\n            this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        // console.log(\"isConnected, default layout\", this.props.isConnected);\n        return (\n\n\n            <div className=\"app\" data-test=\"defaultLayout\">\n                <AppHeader fixed>\n                    <Suspense fallback={this.loading()}>\n                        <DefaultHeader onLogout={e => this.signOut(e)}/>\n                    </Suspense>\n                </AppHeader>\n                <div className=\"app-body\">\n                    <AppSidebar fixed display=\"lg\">\n                        <AppSidebarHeader/>\n                        <AppSidebarForm/>\n                        <Suspense>\n                            <AppSidebarNav navConfig={navigation} {...this.props} />\n                        </Suspense>\n                        <AppSidebarFooter/>\n                        <AppSidebarMinimizer/>\n                    </AppSidebar>\n                    <main className=\"main\">\n                        <AppBreadcrumb appRoutes={routes}/>\n                        <Container fluid>\n                            <Suspense fallback={this.loading()}>\n                                <Switch>\n                                    {\n                                        routes.map((route, idx) => {\n                                            return route.component ? (\n                                                <Route\n                                                    key={idx}\n                                                    path={route.path}\n                                                    exact={route.exact}\n                                                    name={route.name}\n                                                    render={props => (\n                                                        <route.component {...props} />\n                                                    )}/>\n                                            ) : (null);\n                                        })\n                                    }\n                                    <Redirect from=\"/\" to=\"/login\"/>\n                                </Switch>\n                            </Suspense>\n                        </Container>\n                    </main>\n                    <AppAside fixed>\n                        <Suspense fallback={this.loading()}>\n                            <DefaultAside/>\n                        </Suspense>\n                    </AppAside>\n                </div>\n                <AppFooter>\n                    <Suspense fallback={this.loading()}>\n                        <DefaultFooter/>\n                    </Suspense>\n                </AppFooter>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isConnected: state.status.isConnected\n});\n\nexport default connect(mapStateToProps, {})(DefaultLayout);"],"sourceRoot":""}