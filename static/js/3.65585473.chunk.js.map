{"version":3,"sources":["utils/Tools.js","utils/API/API.js","../node_modules/lodash.tonumber/index.js","views/Base/RunningJobs/RunningJobs.js","views/Base/BackendStatusCard/BackendStatusCard.js","actions/statusActions.js","../node_modules/reactstrap/es/Progress.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":["bytesToKB","bytes","bytesToGB","formatBytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","config","name","find","ele","idx","array","Prefix","addColonAtLast","indexOf","__webpack_require__","d","__webpack_exports__","changeListVisibility","changeSearchFilter","isLocalRemoteName","isEmpty","obj","Array","isArray","key","hasOwnProperty","visibilityAssociation","Images","Pdf","list","filter","acceptType","item","IsDir","MimeType","searchQuery","toLowerCase","Name","startsWith","remoteName","axiosInstance","axios","create","baseURL","localStorage","getItem","headers","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","performCopyOrMoveFile","performCopyFile","_callee","mode","url","splitRes","data","_data","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","split","_async","console","post","abrupt","sent","stop","interceptors","request","use","Authorization","btoa","error","Promise","reject","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","objectToString","Object","prototype","toString","isObject","value","type","module","exports","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","slice","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","xAxes","display","JobCard","_ref","job","eta","percentage","speed","speedAvg","size","isNaN","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","JobCardRow","_ref2","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","lg","GlobalStatus","_ref3","stats","checks","elapsedTime","deletes","errors","transfers","TransferringJobs","_ref4","transferring","map","TransferringJobsRow","_ref5","RunningJobs","props","context","_this","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_negative0_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","toggleShowing","setState","prevState","isShowing","state","_this2","_this$props","jobs","isConnected","lineChartData","sm","react_chartjs_2__WEBPACK_IMPORTED_MODULE_15__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_12__","color","React","Component","connect","ownProps","speedData","status","labels","data1","data2","dataLength","forEach","push","ceil","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","TaskModal","ReactDOM","createPortal","react_default","document","getElementById","BackendStatusCard","getStatus","refreshInterval","setInterval","clearInterval","ipAddress","username","Card","CardHeader","CardBody","StatusText","connectivityStatus","userName","Button","defaultProps","asyncToGenerator","regenerator_default","mark","dispatch","then","res","FETCH_STATUS","REQUEST_SUCCESS","payload","REQUEST_ERROR","_x","apply","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5__","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","propTypes","children","node","bar","bool","multi","tag","oneOfType","string","max","animated","striped","barClassName","cssModule","object","Progress","Tag","attributes","percent","progressClasses","progressBarClasses","ProgressBar","style","width","role","aria-valuenow","aria-valuemin","aria-valuemax","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","_idMaker","random","_canvasId","_setCanvasId","tooltip","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","lines","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","position","getBoundingClientRect","positionY","offsetTop","positionX","offsetLeft","positionLeft","caretX","positionTop","caretY","halfWidth","left","top","customTooltips","defineProperty","factory"],"mappings":"0FAkBO,SAASA,EAAUC,GACtB,OAAc,IAAVA,EAAoB,EACbA,EAAQ,KAKhB,SAASC,EAAUD,GACtB,OAAc,IAAVA,EAAoB,EACbA,EAAQ,KAAO,KAAO,KAW9B,SAASE,EAAYF,GAAqB,IAAdG,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC1C,GAAIJ,EAAQ,EAAG,MAAO,MAEtB,IACMO,EAAKJ,EAAW,EAAI,EAAIA,EAGxBK,EAAIC,KAAKC,MAAMD,KAAKE,IAAIX,GAASS,KAAKE,IAJlC,OAMV,OAAOC,YAAYZ,EAAQS,KAAKI,IANtB,KAM6BL,IAAIM,QAAQP,IAAO,IAJ5C,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAIQC,GAenE,SAASO,EAAaC,GAIzB,SAASC,EAAaC,GAClB,OAAQA,EAAS,EAAK,IAAM,GAGhC,IAAIC,EAAQV,KAAKC,MAAMM,EAAU,SACjC,GAAIG,EACA,OAAOA,EAAQ,QAAUF,EAAaE,GAG1C,IAAIC,EAAOX,KAAKC,OAAOM,GAAW,SAAY,OAC9C,GAAII,EACA,OAAOA,EAAO,OAASH,EAAaG,GAExC,IAAIC,EAAQZ,KAAKC,OAAOM,GAAW,OAAS,MAC5C,GAAIK,EACA,OAAOA,EAAQ,QAAUJ,EAAaI,GAE1C,IAAIC,EAAUb,KAAKC,OAAOM,GAAW,MAAQ,IAC7C,OAAIM,EACOA,EAAU,UAAYL,EAAaK,IAE9CN,GAAoB,IAETA,EAAQF,QAAQ,GAAK,UAAYG,EAAaD,GAElD,WAGJ,SAASO,EAAcC,EAAOC,GAEjC,OAAOD,EAAME,KAAKD,GAIf,SAASE,EAAmBF,GAG/B,OAAOF,EAFO,+CAEcE,GAGzB,SAASG,EAAYH,GAExB,OAAOF,EADO,aACcE,GAGzB,SAASI,EAAiBJ,GAE7B,OAAOF,EADO,0CACcE,GASzB,SAASK,EAAeC,EAAQC,GAInC,OAHsBD,EAAOE,KAAK,SAACC,EAAKC,EAAKC,GACzC,OAAQJ,IAASE,EAAIG,SAKtB,SAASC,EAAeN,GAO3B,OAN2B,IAAvBA,EAAKO,QAAQ,MACiB,MAA1BP,EAAKA,EAAK3B,OAAS,KACnB2B,GAAc,KAIfA,EAxIXQ,EAAAC,EAAAC,EAAA,sBAAA3C,IAAAyC,EAAAC,EAAAC,EAAA,sBAAAzC,IAAAuC,EAAAC,EAAAC,EAAA,sBAAAxC,IAAAsC,EAAAC,EAAAC,EAAA,sBAAA3B,IAAAyB,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAd,IAAAY,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAJ,IAAAE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IASeC,IATR,SAAiBC,GACpB,GAAIC,MAAMC,QAAQF,GAAM,OAAsB,IAAfA,EAAI1C,OACnC,IAAK,IAAI6C,KAAOH,EACZ,GAAIA,EAAII,eAAeD,GACnB,OAAO,EAEf,OAAO,GAqIX,IAAME,EAAwB,CAC1BC,OAAQ,aACRC,IAAK,mBAIF,SAASX,EAAqBY,EAAMC,GAA2C,IAC9EC,GAD8ErD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBgD,GAChCI,GAE3B,OAAIC,EACcF,EAAKC,OAAO,SAACE,GACvB,OAAQA,EAAKC,OAASD,EAAKE,WAAaH,IAIzCF,EAIJ,SAASX,EAAmBW,GAAwB,IAAlBM,EAAkBzD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAEnD,OADAyD,EAAcA,EAAYC,eAERP,EAAKC,OAAO,SAACE,GACvB,OAAOA,EAAKK,KAAKD,cAAcE,WAAWH,KAI3CN,EAKJ,SAASV,EAAkBoB,GAC9B,OAAQA,GAA6B,KAAfA,GAAuC,MAAlBA,EAAW,gKCxKtDC,EAAgBC,IAAMC,OAAO,CAC7BC,QAASC,aAAaC,QAAQ,aAC9BC,QAAS,CAACC,eAAgB,oBAC1BC,aAAc,SAuBX,SAASC,EAAgBC,EAAOC,EAAWC,EAAOC,EAAWhB,EAAMJ,GACtE,OAAOqB,EAAsBJ,EAAOC,EAAWC,EAAOC,EAAWhB,EAAMJ,EAAO,QAa3E,SAASsB,EAAgBL,EAAOC,EAAWC,EAAOC,EAAWhB,EAAMJ,GAEtE,OAAOqB,EAAsBJ,EAAOC,EAAWC,EAAOC,EAAWhB,EAAMJ,EAAO,iBAenEqB,2FAAf,SAAAE,EAAqCN,EAAOC,EAAWC,EAAOC,EAAWhB,EAAMJ,EAAOwB,GAAtF,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACQT,EAAM,GAGFA,EAFK,SAATD,EACIxB,EACM,aAEA,uBAGNA,EACM,aAEA,uBAIVd,YAAkB+B,KAClBA,EAAQ,IAGR/B,YAAkBiC,KAClBA,EAAQ,KAGRnB,EAxBR,CAAAgC,EAAAE,KAAA,gBA0BcR,EAAWR,EAAUiB,MAAM,KAE3BR,EAAO,CACTV,MAAOA,EAAQC,EACfC,MAAOA,EAAQC,EAAY,IAAMM,EAASA,EAAShF,OAAS,GAC5D0F,QAAQ,GAEZC,QAAQrF,IAAI,SAAU2E,GAjC9BK,EAAAE,KAAA,GAkCqB3B,EAAc+B,KAAKb,EAAKE,GAlC7C,eAAAK,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,cAqC0B,KAAdpB,EACAA,EAAYhB,EAEZgB,GAAa,IAAMhB,EAGjBuB,EAAO,CACTV,MAAOA,EACPC,UAAWA,EACXC,MAAOA,EACPC,UAAWA,EACXgB,QAAQ,GAhDpBJ,EAAAE,KAAA,GAkDqB3B,EAAc+B,KAAKb,EAAKE,GAlD7C,eAAAK,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,yBAAAR,EAAAS,SAAAlB,6BAlDAhB,EAAcmC,aAAaC,QAAQC,IAC/B,SAAAxE,GAGI,OAFAA,EAAOyC,QAAQgC,cAAgB,SAAWC,KAAKnC,aAAaC,QAAQ,YAAc,IAAMD,aAAaC,QAAQ,aAEtGxC,GAEX,SAAA2E,GAAK,OAAIC,QAAQC,OAAOF,KAmGbxC,yBC1Gf,IAAA2C,EAAA,IAGAC,EAAA,kBAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAGAC,EAAAC,SAUAC,EAPAC,OAAAC,UAOAC,SA2BA,SAAAC,EAAAC,GACA,IAAAC,SAAAD,EACA,QAAAA,IAAA,UAAAC,GAAA,YAAAA,GAqGAC,EAAAC,QAvBA,SAAAH,GACA,oBAAAA,EACA,OAAAA,EAGA,GAjCA,SAAAA,GACA,uBAAAA,GAvBA,SAAAA,GACA,QAAAA,GAAA,iBAAAA,EAsBAI,CAAAJ,IAAAL,EAAAU,KAAAL,IAAAZ,EAgCAkB,CAAAN,GACA,OAAAb,EAGA,GAAAY,EAAAC,GAAA,CACA,IAAAO,EAAA,mBAAAP,EAAAQ,QAAAR,EAAAQ,UAAAR,EACAA,EAAAD,EAAAQ,KAAA,GAAAA,EAGA,oBAAAP,EACA,WAAAA,OAGAA,IAAAS,QAAApB,EAAA,IACA,IAAAqB,EAAAnB,EAAAvF,KAAAgG,GACA,OAAAU,GAAAlB,EAAAxF,KAAAgG,GAAAP,EAAAO,EAAAW,MAAA,GAAAD,EAAA,KAAApB,EAAAtF,KAAAgG,GAAAb,GAAAa,uMC7JMY,EAAU,CACZC,SAAU,CACNC,SAAS,EACTC,OAAQC,kBAEZC,qBAAqB,EACrBC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,KAGrBC,MAAO,CAAC,CACJF,MAAO,CACHG,SAAS,OAKzB,SAASC,EAATC,GAAwB,IAANC,EAAMD,EAANC,IACPpH,EAAuDoH,EAAvDpH,KAAMqH,EAAiDD,EAAjDC,IAAKC,EAA4CF,EAA5CE,WAAYC,EAAgCH,EAAhCG,MAAOC,EAAyBJ,EAAzBI,SAAUC,EAAeL,EAAfK,KAAMzJ,EAASoJ,EAATpJ,MACrD,OAAIgC,IAAS0H,MAAMH,GAEPI,EAAAlE,EAAAmE,cAACC,EAAA,EAAD,KACJF,EAAAlE,EAAAmE,cAACE,EAAA,EAAD,qBACAH,EAAAlE,EAAAmE,cAACG,EAAA,EAAD,KACIJ,EAAAlE,EAAAmE,cAAA,SAAI5H,GADR,IAEI2H,EAAAlE,EAAAmE,cAACI,EAAA,EAAD,CAAUtC,MAAO4B,EAAYW,UAAW,QAASX,EAAjD,MAFJ,IAGIK,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,yBAAyB1J,YAAYqJ,GAAxC,MAHJ,IAIII,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,iCAAiC1J,YAAYsJ,GAAhD,MAJJ,IAKIG,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,qCAAqC1J,YAAYF,IALxD,IAMI2J,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,wBAAwB1J,YAAYuJ,IACvCE,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,uBAAuB7I,YAAasI,GAAvC,cAKL,KAGX,SAASa,EAATC,GAA2B,IAANf,EAAMe,EAANf,IACVpH,EAAiCoH,EAAjCpH,KAAMsH,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,MAAOE,EAAQL,EAARK,KAChC,OACIE,EAAAlE,EAAAmE,cAACD,EAAAlE,EAAM2E,SAAP,KACIT,EAAAlE,EAAAmE,cAACS,EAAA,EAAD,KACMZ,GAAQF,EAAUI,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKC,GAAI,IAAKvI,EAAd,IAAqB9B,YAAYuJ,GAAjC,OAA4CvJ,YAAYqJ,GAAxD,OAChBI,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKC,GAAI,IAAT,gBAGRZ,EAAAlE,EAAAmE,cAACS,EAAA,EAAD,KACIV,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKC,GAAI,IAAIZ,EAAAlE,EAAAmE,cAACI,EAAA,EAAD,CAAUtC,MAAO4B,EAAYW,UAAW,QAASX,EAAjD,SAS7B,SAASkB,EAATC,GAA+B,IAARC,EAAQD,EAARC,MACZnB,EAAiEmB,EAAjEnB,MAAOvJ,EAA0D0K,EAA1D1K,MAAO2K,EAAmDD,EAAnDC,OAAQC,EAA2CF,EAA3CE,YAAaC,EAA8BH,EAA9BG,QAASC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,UAC3D,OACIpB,EAAAlE,EAAAmE,cAACC,EAAA,EAAD,KACIF,EAAAlE,EAAAmE,cAACE,EAAA,EAAD,KAAYH,EAAAlE,EAAAmE,cAAA,+BACZD,EAAAlE,EAAAmE,cAACG,EAAA,EAAD,KACIJ,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,qCAAqC1J,YAAYF,IACpD2J,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,iCAAiC1J,YAAYqJ,GAAhD,MACAI,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,0BAA0Be,GAC7BhB,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,2BAA2BiB,GAC9BlB,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,iCAAiC7I,YAAa6J,IACjDjB,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,0BAA0BkB,GAC7BnB,EAAAlE,EAAAmE,cAAA,SAAGD,EAAAlE,EAAAmE,cAAA,6BAA6BmB,KAShD,SAASC,EAATC,GAA0C,IAAfC,EAAeD,EAAfC,aACvB,YAAqB5K,IAAjB4K,EACOA,EAAaC,IAAI,SAACzH,EAAMvB,GAC3B,OAAQwH,EAAAlE,EAAAmE,cAACV,EAAD,CAAShG,IAAKf,EAAKiH,IAAK1F,MAGjC,KAGX,SAAS0H,EAATC,GAA6C,IAAfH,EAAeG,EAAfH,aAC1B,YAAqB5K,IAAjB4K,EACOA,EAAaC,IAAI,SAACzH,EAAMvB,GAC3B,OAAQwH,EAAAlE,EAAAmE,cAACM,EAAD,CAAYhH,IAAKf,EAAKiH,IAAK1F,MAGpC,SAIL4H,cAEF,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAL,IACxBG,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgE,GAAAvD,KAAA4D,KAAMJ,EAAOC,KAMjBM,cAAgB,WACZL,EAAKM,SAAS,SAACC,GACX,MAAO,CACHC,WAAYD,EAAUC,cAR9BR,EAAKS,MAAQ,CACTD,WAAW,GAHSR,wEAiBnB,IAAAU,EAAAR,KAAAS,EACsCT,KAAKJ,MAAzCc,EADFD,EACEC,KAAMC,EADRF,EACQE,YAAaC,EADrBH,EACqBG,cACnBrB,EAAgBmB,EAAhBnB,aACA/F,EAAQwG,KAAKJ,MAAbpG,KACP,MAAa,gBAATA,EACImH,EAEI3C,EAAAlE,EAAAmE,cAACS,EAAA,EAAD,KACIV,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKkC,GAAI,GAAIjC,GAAI,GACbZ,EAAAlE,EAAAmE,cAACY,EAAD,CAAcE,MAAO2B,KAGzB1C,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKkC,GAAI,GAAIjC,GAAI,GACbZ,EAAAlE,EAAAmE,cAACC,EAAA,EAAD,KACIF,EAAAlE,EAAAmE,cAACE,EAAA,EAAD,cAGAH,EAAAlE,EAAAmE,cAACG,EAAA,EAAD,KACIJ,EAAAlE,EAAAmE,cAAA,OAAKK,UAAU,iBACXN,EAAAlE,EAAAmE,cAAC6C,EAAA,EAAD,CAAMnH,KAAMiH,EAAejE,QAASA,QAKpDqB,EAAAlE,EAAAmE,cAACU,EAAA,EAAD,CAAKkC,GAAI,GAAIjC,GAAI,GACbZ,EAAAlE,EAAAmE,cAACoB,EAAD,CAAkBE,aAAcA,MAKpCvB,EAAAlE,EAAAmE,cAAA,uCAGI,SAATzE,EACHmH,EAGI3C,EAAAlE,EAAAmE,cAACwB,EAAD,CAAqBF,aAAcA,IAG/BvB,EAAAlE,EAAAmE,cAAA,uCAGI,UAATzE,EACH+F,GAAgBA,EAAa7K,OAAS,EAElCsJ,EAAAlE,EAAAmE,cAACC,EAAA,EAAD,CAAMI,UAAU,oCACZN,EAAAlE,EAAAmE,cAACE,EAAA,EAAD,CAAY4C,QAAS,kBAAMP,EAAKL,kBAAhC,WACInC,EAAAlE,EAAAmE,cAAA,OAAKK,UAAU,uBACXN,EAAAlE,EAAAmE,cAAC+C,EAAA,EAAD,CAAQC,MAAM,QACVjD,EAAAlE,EAAAmE,cAAA,KAAGK,UAAU,yBAIzBN,EAAAlE,EAAAmE,cAACG,EAAA,EAAD,CAAUE,WAAY0B,KAAKO,MAAMD,WAAa,UAC1CtC,EAAAlE,EAAAmE,cAACwB,EAAD,CAAqBF,aAAcA,MAK5C,UAjBJ,SA9DW2B,IAAMC,WAyKjBC,gBA9ES,SAACb,EAAOc,GAE5B,IAAMC,EAAYf,EAAMgB,OAAO3D,MAC3BgD,EAAgB,GACpB,GAAIU,EAAW,CACX,IAAIE,EAAS,GACTC,EAAQ,GACRC,EAAQ,GAENC,EAAaL,EAAU5M,OAET4M,EAAU5E,MAAMiF,EAAa,GAAIA,EAAa,GAEtDC,QAAQ,SAAC7J,EAAMvB,GACvBgL,EAAOK,KAAK/M,KAAKgN,KAAK/J,EAAKkH,cAC3BwC,EAAMI,KAAKzN,YAAU2D,EAAK6F,OAAOzI,QAAQ,IACzCuM,EAAMG,KAAKzN,YAAU2D,EAAK8F,UAAU1I,QAAQ,MAIhDyL,EAAgB,CACZY,OAAQA,EACRO,SAAU,CACN,CACIC,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBtJ,KAAM8H,GAEV,CACIO,MAAO,uBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,sBACjBC,YAAa,iBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,iBAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBtJ,KAAM+H,KAOtB,MAAO,CACHhB,KAAMH,EAAMgB,OAAOb,KACnBC,YAAaJ,EAAMgB,OAAOZ,YAC1B5F,MAAOwF,EAAMgB,OAAOxG,MACpB6F,kBAIgC,GAAzBQ,CAA6BzB,sNC3Q5C,SAASuD,IACL,OAAOC,IAASC,aACZC,EAAAvJ,EAAAmE,cAAC0B,EAAA,EAAD,CAAanG,KAAM,UAEpB8J,SAASC,eAAe,mBAGzBC,+LAGmB,IAAA1D,EAAAE,KAGjBA,KAAKJ,MAAM6D,YACXzD,KAAK0D,gBAAkBC,YAAY,kBAAM7D,EAAKF,MAAM6D,aAAa,oDAMjEG,cAAc5D,KAAK0D,kDAGd,IAAAjD,EACuBT,KAAKJ,MAA1Be,EADFF,EACEE,YAAanH,EADfiH,EACejH,KAEdqK,EAAYlL,aAAaC,QAAQ,aACjCkL,EAAWnL,aAAaC,QAAQ,YAGtC,MAAa,SAATY,EAGI6J,EAAAvJ,EAAAmE,cAAC8F,EAAA,EAAD,CACMzF,UAAW,gBAAkBqC,EAAc,mBAAqB,wBAClE0C,EAAAvJ,EAAAmE,cAAC+F,EAAA,EAAD,sBAGAX,EAAAvJ,EAAAmE,cAACgG,EAAA,EAAD,KACIZ,EAAAvJ,EAAAmE,cAACiG,EAAD,CAAYC,mBAAoBxD,EAAakD,UAAWA,EAAWO,SAAUN,MAOrFT,EAAAvJ,EAAAmE,cAACoF,EAAAvJ,EAAM2E,SAAP,KACI4E,EAAAvJ,EAAAmE,cAACoG,EAAA,EAAD,CAAQrI,KAAK,UACLsC,UAAWqC,EAAc,6BAA+B,gCADhE,IACkGA,EAAc,YAAc,gBAE9H0C,EAAAvJ,EAAAmE,cAACiF,EAAD,cA3CYhC,IAAMC,WAiDtC,SAAS+C,EAAT1G,GAA+D,IAA1C2G,EAA0C3G,EAA1C2G,mBAAoBN,EAAsBrG,EAAtBqG,UAAWO,EAAW5G,EAAX4G,SAChD,OAAID,EAEId,EAAAvJ,EAAAmE,cAAA,oEAA2DoF,EAAAvJ,EAAAmE,cAAA,WAA3D,yBAAuF4F,EACnFR,EAAAvJ,EAAAmE,cAAA,WAAKoF,EAAAvJ,EAAAmE,cAAA,6BAA6BmG,GAItCf,EAAAvJ,EAAAmE,cAAA,oFAA4E4F,EAA5E,KAiBZL,EAAkBc,aANG,CACjB9K,KAAM,QAWK4H,gBAJS,SAAAb,GAAK,MAAK,CAC9BI,YAAaJ,EAAMgB,OAAOZ,cAGU,CAAC8C,UC3FhB,iCAAAjG,EAAA7B,OAAA4I,EAAA,EAAA5I,CAAA6I,EAAA1K,EAAA2K,KAAM,SAAAlL,EAAMmL,GAAN,OAAAF,EAAA1K,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE3B3B,IAAc+B,KAAK,eAAeqK,KAAK,SAAAC,GAAG,OAAIF,EAAS,CACnD1I,KAAM6I,IACNtD,OAAQuD,IACRC,QAASH,EAAIjL,QACb,SAAAoB,GAAK,OAAI2J,EAAS,CAClB1I,KAAM6I,IACNtD,OAAQyD,IACRD,QAAShK,MATc,wBAAAf,EAAAS,SAAAlB,MAAN,gBAAA0L,GAAA,OAAAzH,EAAA0H,MAAAlF,KAAAvL,YAAA,KD2FV2M,CAAsCoC,qCEhGrD,IAAA2B,EAAAtO,EAAA,GAAAuO,EAAAvO,EAAA,IAAAwO,EAAAxO,EAAA,GAAAyO,EAAAzO,EAAA0O,EAAAF,GAAAG,EAAA3O,EAAA,GAAA4O,EAAA5O,EAAA0O,EAAAC,GAAAE,EAAA7O,EAAA,IAAA8O,EAAA9O,EAAA0O,EAAAG,GAAAE,EAAA/O,EAAA,KAAAgP,EAAAhP,EAAA0O,EAAAK,GAAAE,EAAAjP,EAAA,KAOAkP,EAAA,CACAC,SAAYP,EAAA3L,EAASmM,KACrBC,IAAOT,EAAA3L,EAASqM,KAChBC,MAASX,EAAA3L,EAASqM,KAClBE,IAAOP,EAAA,EACP/J,MAAS0J,EAAA3L,EAASwM,UAAA,CAAYb,EAAA3L,EAASyM,OAASd,EAAA3L,EAASvE,SACzDiR,IAAOf,EAAA3L,EAASwM,UAAA,CAAYb,EAAA3L,EAASyM,OAASd,EAAA3L,EAASvE,SACvDkR,SAAYhB,EAAA3L,EAASqM,KACrBO,QAAWjB,EAAA3L,EAASqM,KACpBlF,MAASwE,EAAA3L,EAASyM,OAClBjI,UAAamH,EAAA3L,EAASyM,OACtBI,aAAgBlB,EAAA3L,EAASyM,OACzBK,UAAanB,EAAA3L,EAAS+M,QAQtBC,EAAA,SAAAlH,GACA,IAAAoG,EAAApG,EAAAoG,SACA1H,EAAAsB,EAAAtB,UACAqI,EAAA/G,EAAA+G,aACAC,EAAAhH,EAAAgH,UACA7K,EAAA6D,EAAA7D,MACAyK,EAAA5G,EAAA4G,IACAC,EAAA7G,EAAA6G,SACAC,EAAA9G,EAAA8G,QACAzF,EAAArB,EAAAqB,MACAiF,EAAAtG,EAAAsG,IACAE,EAAAxG,EAAAwG,MACAW,EAAAnH,EAAAyG,IACAW,EAAmBrL,OAAAyJ,EAAA,EAAAzJ,CAA6BiE,EAAA,oHAEhDqH,EAAgBpB,IAAQ9J,GAAU8J,IAAQW,GAAA,IAC1CU,EAAwBvL,OAAAmK,EAAA,EAAAnK,CAAgBgK,IAAUrH,EAAA,YAAAsI,GAClDO,EAA2BxL,OAAAmK,EAAA,EAAAnK,CAAgBgK,IAAU,eAAAO,GAAA5H,GAAAqI,EAAAF,EAAA,6BAAAxF,EAAA,MAAAA,EAAA,KAAAyF,GAAAD,EAAA,6BAAAG,GACrDQ,EAAAhB,EAAAJ,EAAuCV,EAAAxL,EAAKmE,cAAA,OAC5CK,UAAA6I,EACAE,MAAA,CACAC,MAAAL,EAAA,KAEAM,KAAA,cACAC,gBAAAzL,EACA0L,gBAAA,IACAC,gBAAAlB,EACAR,aAGA,OAAAE,EACAkB,EAGS9B,EAAAxL,EAAKmE,cAAA8I,EAAoBpL,OAAAwJ,EAAA,EAAAxJ,CAAQ,GAAGqL,EAAA,CAC7C1I,UAAA4I,EACAlB,SAAAoB,MAIAN,EAAAf,YACAe,EAAAxC,aA/CA,CACA+B,IAAA,MACAtK,MAAA,EACAyK,IAAA,KA6CezP,EAAA,0BCnEd,SAAAmF,GACD,aAQA,SAAAa,EAAA4K,GACA,IAAA7H,EAAAE,KAgBA4H,EAAA,CACAC,MAAA,QACAC,MAAA,QACAC,gBAAA,kBACAC,aAAA,eACAC,aAAA,eACAC,kBAAA,oBACAC,wBAAA,0BACAC,wBAAA,0BACAC,wBAAA,0BACAC,eAAA,iBACAC,oBAAA,uBAEAC,EAAA,CACAC,IAAA,MACAC,KAAA,OACAC,SAAA3I,KAAA4I,OAAAC,OAAAC,IA7BA,WACA,IAAAC,EAAA,WAGA,OADA,OACA,EAAAjU,KAAAkU,UAAA,GAAAnN,SAFA,KAKAoN,EAAA,YAAAF,SAGA,OADAjJ,EAAA8I,OAAAC,OAAAC,GAAAG,EACAA,EAmBAC,IAAA,YAEAC,EAAA7F,SAAAC,eAAAiF,EAAAG,SAWA,GATAQ,KACAA,EAAA7F,SAAArF,cAAA,QACA6K,GAAAN,EAAAG,QACAQ,EAAA7K,UAAAsJ,EAAAG,gBAEA/H,KAAA4I,OAAAC,OAAAO,WAAAC,YAAAF,IAIA,IAAAxB,EAAA2B,QAAA,CAeA,GATAH,EAAAI,UAAAC,OAAA5B,EAAAC,MAAAD,EAAAE,MAAAF,EAAAI,cAEAL,EAAA8B,OACAN,EAAAI,UAAAG,IAAA/B,EAAA8B,QAEAN,EAAAI,UAAAG,IAAA9B,EAAAI,cAIAL,EAAAgC,KAAA,CACA,IAAAC,EAAAjC,EAAAkC,OAAA,GACAC,EAAAxG,SAAArF,cAAAuK,EAAAC,KACAqB,EAAAxL,UAAAsJ,EAAAU,eACAsB,EAAAhI,QAAA,SAAAiI,GACA,IAAAE,EAAAzG,SAAArF,cAAAuK,EAAAC,KACAsB,EAAAzL,UAAAsJ,EAAAW,oBACAwB,EAAAC,UAAAH,EACAC,EAAAT,YAAAU,KAEA,IAAAE,EAAA3G,SAAArF,cAAAuK,EAAAC,KACAwB,EAAA3L,UAAAsJ,EAAAK,aACA,IAAAiC,EAAAvC,EAAAgC,KAAAnK,IAAA,SAAAzH,GACA,OAAAA,EAAAoS,QAEAD,EAAAtI,QAAA,SAAA7J,EAAAlD,GACA,IAAAuV,EAAA9G,SAAArF,cAAAuK,EAAAC,KACA2B,EAAA9L,UAAAsJ,EAAAM,kBACA,IAAAmC,EAAA1C,EAAA2C,YAAAzV,GACA0V,EAAAjH,SAAArF,cAAAuK,EAAAE,MAKA,GAJA6B,EAAAjM,UAAAsJ,EAAAO,wBACAoC,EAAAlD,MAAAlF,gBAAAkI,EAAAlI,gBACAiI,EAAAf,YAAAkB,GAEAxS,EAAA,GAAAoC,MAAA,KAAAzF,OAAA,GACA,IAAA8V,EAAAlH,SAAArF,cAAAuK,EAAAE,MACA8B,EAAAlM,UAAAsJ,EAAAQ,wBACAoC,EAAAR,UAAAjS,EAAA,GAAAoC,MAAA,SACAiQ,EAAAf,YAAAmB,GACA,IAAAC,EAAAnH,SAAArF,cAAAuK,EAAAE,MACA+B,EAAAnM,UAAAsJ,EAAAS,wBACAoC,EAAAT,UAAAjS,EAAA,GAAAoC,MAAA,MAAAuQ,MACAN,EAAAf,YAAAoB,OACS,CACT,IAAAE,EAAArH,SAAArF,cAAAuK,EAAAE,MAEAiC,EAAArM,UAAAsJ,EAAAS,wBACAsC,EAAAX,UAAAjS,EAAA,GACAqS,EAAAf,YAAAsB,GAGAV,EAAAZ,YAAAe,KAEAjB,EAAAa,UAAA,GACAb,EAAAE,YAAAS,GACAX,EAAAE,YAAAY,GAGA,IAAAW,EAAA5K,KAAA4I,OAAAC,OAAAgC,wBAEAC,EAAA9K,KAAA4I,OAAAC,OAAAkC,UACAC,EAAAhL,KAAA4I,OAAAC,OAAAoC,WACAC,EAAAF,EAAArD,EAAAwD,OACAC,EAAAN,EAAAnD,EAAA0D,OAEAC,EAAA3D,EAAAL,MAAA,EAEA4D,EAAAI,EAAAV,EAAAtD,MACA4D,GAAAI,EACKJ,EAAAI,IACLJ,GAAAI,GAIAnC,EAAA9B,MAAAiC,QAAA,EACAH,EAAA9B,MAAAkE,KAAAL,EAAA,KACA/B,EAAA9B,MAAAmE,IAAAJ,EAAA,UAhFAjC,EAAA9B,MAAAiC,QAAA,EAmFA,IAAAmC,EAAA1O,EAEAb,EAAAa,iBACAb,EAAAuP,iBACA9P,OAAA+P,eAAAxP,EAAA,cACAH,OAAA,IAjJ8D4P,CAAAzP","file":"static/js/3.65585473.chunk.js","sourcesContent":["export function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport default isEmpty;\n\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/*Returns object of config if found, else returns undefined*/\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}","import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\n\n// Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\nlet axiosInstance = axios.create({\n    baseURL: localStorage.getItem('ipAddress'),\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n\naxiosInstance.interceptors.request.use(\n    config => {\n        config.headers.Authorization = 'Basic ' + btoa(localStorage.getItem('username') + \":\" + localStorage.getItem('password'));\n        // console.log(config, localStorage.getItem('username'), localStorage.getItem('password'));\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = \"/sync/move\";\n        } else {\n            url = \"/operations/movefile\";\n        }\n    } else {\n        if (IsDir) {\n            url = \"/sync/copy\";\n        } else {\n            url = \"/operations/copyfile\";\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        const data = {\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n            _async: true\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        const data = {\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n            _async: true\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\nexport default axiosInstance;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","import React from 'react';\nimport {Button, Card, CardBody, CardHeader, Col, Progress, Row} from \"reactstrap\";\nimport {bytesToKB, formatBytes, secondsToStr} from \"../../../utils/Tools\";\nimport * as PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {Line} from \"react-chartjs-2\";\nimport {CustomTooltips} from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false,\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        xAxes: [{\n            ticks: {\n                display: false\n            }\n        }]\n    }\n};\nfunction JobCard({job}) {\n    const {name, eta, percentage, speed, speedAvg, size, bytes} = job;\n    if (name && !isNaN(speed)) {\n\n        return (<Card>\n            <CardHeader>Running Jobs</CardHeader>\n            <CardBody>\n                <p>{name}</p> {/*Name of the file*/}\n                <Progress value={percentage} className={\"mb-2\"}>{percentage} %</Progress> {/*percentage*/}\n                <p><strong>Speed: </strong>{formatBytes(speed)}PS</p> {/*speed*/}\n                <p><strong>Average Speed: </strong>{formatBytes(speedAvg)}PS</p> {/*speedAvg*/}\n                <p><strong>Total transferred: </strong>{formatBytes(bytes)}</p> {/*bytes: convert to mb*/}\n                <p><strong>Size: </strong>{formatBytes(size)}</p>\n                <p><strong>ETA: </strong>{secondsToStr(eta)} seconds</p>\n            </CardBody>\n\n        </Card>);\n    }\n    return null;\n}\n\nfunction JobCardRow({job}) {\n    const {name, percentage, speed, size} = job;\n    return (\n        <React.Fragment>\n            <Row>\n                {(size && speed) ? (<Col lg={12}>{name}({formatBytes(size)}) - {formatBytes(speed)}PS </Col>) : (\n                    <Col lg={12}>Calculating</Col>)}\n\n            </Row>\n            <Row>\n                <Col lg={12}><Progress value={percentage} className={\"mb-2\"}>{percentage} %</Progress></Col>\n            </Row>\n\n        </React.Fragment>\n    );\n\n\n}\n\nfunction GlobalStatus({stats}) {\n    const {speed, bytes, checks, elapsedTime, deletes, errors, transfers} = stats;\n    return (\n        <Card>\n            <CardHeader><strong>Global Stats</strong></CardHeader>\n            <CardBody>\n                <p><strong>Bytes Transferred: </strong>{formatBytes(bytes)}</p>\n                <p><strong>Average Speed: </strong>{formatBytes(speed)}PS</p>\n                <p><strong>Checks: </strong>{checks}</p>\n                <p><strong>Deletes: </strong>{deletes}</p>\n                <p><strong>Running since: </strong>{secondsToStr(elapsedTime)}</p>\n                <p><strong>Errors: </strong>{errors}</p>\n                <p><strong>Transfers: </strong>{transfers}</p>\n\n            </CardBody>\n            {/*<CardFooter></CardFooter>*/}\n\n        </Card>);\n\n}\n\nfunction TransferringJobs({transferring}) {\n    if (transferring !== undefined) {\n        return transferring.map((item, idx) => {\n            return (<JobCard key={idx} job={item}/>);\n        });\n    }\n    return null;\n}\n\nfunction TransferringJobsRow({transferring}) {\n    if (transferring !== undefined) {\n        return transferring.map((item, idx) => {\n            return (<JobCardRow key={idx} job={item}/>);\n        });\n    }\n    return null;\n}\n\n\nclass RunningJobs extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            isShowing: true\n        }\n    }\n\n    toggleShowing = () => {\n        this.setState((prevState) => {\n            return {\n                isShowing: !prevState.isShowing\n            }\n        })\n    };\n\n\n\n    render() {\n        const {jobs, isConnected, lineChartData} = this.props;\n        const {transferring} = jobs;\n        const {mode} = this.props;\n        if (mode === \"full-status\") {\n            if (isConnected) {\n                return (\n                    <Row>\n                        <Col sm={12} lg={4}>\n                            <GlobalStatus stats={jobs}/>\n                        </Col>\n\n                        <Col sm={12} lg={4}>\n                            <Card>\n                                <CardHeader>\n                                    Speed\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"chart-wrapper\">\n                                        <Line data={lineChartData} options={options}/>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm={12} lg={4}>\n                            <TransferringJobs transferring={transferring}/>\n                        </Col>\n                    </Row>\n                );\n            } else {\n                return (<div>Not connected to rclone.</div>)\n            }\n\n        } else if (mode === \"card\") {\n            if (isConnected) {\n                return (\n\n                    <TransferringJobsRow transferring={transferring}/>\n                );\n            } else {\n                return (<div>Not connected to rclone.</div>);\n            }\n\n        } else if (mode === \"modal\") {\n            if (transferring && transferring.length > 0)\n                return (\n                    <Card className=\"progress-modal d-none d-sm-block\">\n                        <CardHeader onClick={() => this.toggleShowing()}>Progress\n                            <div className=\"card-header-actions\">\n                                <Button color=\"link\">\n                                    <i className=\"fa fa-close fa-lg\"/>\n                                </Button>\n                            </div>\n                        </CardHeader>\n                        <CardBody className={!this.state.isShowing && \"d-none\"}>\n                            <TransferringJobsRow transferring={transferring}/>\n\n                        </CardBody>\n                    </Card>\n                );\n            return null;\n        }\n    }\n}\n\nRunningJobs.propTypes = {\n    mode: PropTypes.string.isRequired,\n    isConnected: PropTypes.bool.isRequired,\n    jobs: PropTypes.object.isRequired,\n    error: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const speedData = state.status.speed;\n    let lineChartData = {};\n    if (speedData) {\n        let labels = [];\n        let data1 = [];\n        let data2 = [];\n\n        const dataLength = speedData.length;\n        //\n        const limitedData = speedData.slice(dataLength - 50, dataLength - 1);\n        // console.log(limitedData.length);\n        limitedData.forEach((item, idx) => {\n            labels.push(Math.ceil(item.elapsedTime));\n            data1.push(bytesToKB(item.speed).toFixed(2));\n            data2.push(bytesToKB(item.speedAvg).toFixed(2));\n        });\n\n        // console.log(data1, data2);\n        lineChartData = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Speed (kbps)',\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: 'rgba(75,192,192,0.4)',\n                    borderColor: 'rgba(75,192,192,1)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgba(75,192,192,1)',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: data1,\n                },\n                {\n                    label: 'Average Speed (kbps)',\n                    fill: true,\n                    lineTension: 0.1,\n                    backgroundColor: 'rgba(187,69,14,0.4)',\n                    borderColor: 'rgb(192,76,58)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgb(187,69,14)',\n                    pointBackgroundColor: '#ff7459',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: data2,\n                }\n            ],\n        };\n    }\n\n\n    return {\n        jobs: state.status.jobs,\n        isConnected: state.status.isConnected,\n        error: state.status.error,\n        lineChartData\n    }\n};\n\nexport default connect(mapStateToProps, {})(RunningJobs);\n","import React from \"react\";\nimport {Button, Card, CardBody, CardHeader} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport RunningJobs from \"../RunningJobs\";\nimport {connect} from \"react-redux\";\nimport {getStatus} from \"../../../actions/statusActions\";\n\n\nfunction TaskModal() {\n    return ReactDOM.createPortal((\n        <RunningJobs mode={\"modal\"}/>\n\n    ), document.getElementById(\"modal-root\"));\n}\n\nclass BackendStatusCard extends React.Component {\n\n\n    componentWillMount() {\n\n        // Check if the connection to the backend is active\n        this.props.getStatus();\n        this.refreshInterval = setInterval(() => this.props.getStatus(), 5000);\n    }\n\n\n    componentWillUnmount() {\n        // Clear the interval before component is unmounted\n        clearInterval(this.refreshInterval);\n    }\n\n    render() {\n        const {isConnected, mode} = this.props;\n\n        const ipAddress = localStorage.getItem('ipAddress');\n        const username = localStorage.getItem(\"username\");\n\n\n        if (mode === \"card\")\n            return (\n\n                <Card\n                      className={\"text-center \" + (isConnected ? \"card-accent-info\" : \"card-accent-warning\")}>\n                    <CardHeader>\n                        rclone status\n                    </CardHeader>\n                    <CardBody>\n                        <StatusText connectivityStatus={isConnected} ipAddress={ipAddress} userName={username}/>\n\n                    </CardBody>\n                </Card>\n            );\n        else /*Default*/\n            return (\n                <React.Fragment>\n                    <Button type=\"primary\"\n                            className={isConnected ? \"bg-info  d-none d-lg-block\" : \"bg-warning d-none d-lg-block\"}> {isConnected ? \"CONNECTED\" : \"DISCONNECTED\"}</Button>\n                    {/*Show current tasks in the side modal*/}\n                    <TaskModal/>\n                </React.Fragment>\n            )\n    }\n}\n\nfunction StatusText({connectivityStatus, ipAddress, userName}) {\n    if (connectivityStatus) {\n        return (\n            <p>The rclone backend is connected and working as expected.<br/>Current IP address is {ipAddress}\n                <br/><strong> Username: </strong>{userName}</p>\n        );\n    } else {\n        return (\n            <p>Cannot connect to rclone backend. There is a problem with connecting to {ipAddress}.</p>\n\n        )\n    }\n}\n\nconst propTypes = {\n    mode: PropTypes.string.isRequired,\n    isConnected: PropTypes.bool.isRequired,\n};\n\nconst defaultProps = {\n    mode: \"card\",\n};\n\n\nBackendStatusCard.propTypes = propTypes;\nBackendStatusCard.defaultProps = defaultProps;\n\nconst mapStateToProps = state => ({\n    isConnected: state.status.isConnected\n});\n\nexport default connect(mapStateToProps, {getStatus})(BackendStatusCard);\n","import axiosInstance from \"../utils/API/API\";\n\nimport {FETCH_STATUS, REQUEST_ERROR, REQUEST_SUCCESS} from \"./types\";\n\n\nexport const getStatus = () => async dispatch => {\n    // console.log(\"get Status\");\n    axiosInstance.post('/core/stats').then(res => dispatch({\n        type: FETCH_STATUS,\n        status: REQUEST_SUCCESS,\n        payload: res.data\n    }), error => dispatch({\n        type: FETCH_STATUS,\n        status: REQUEST_ERROR,\n        payload: error\n    }))\n};\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : React.createElement(\"div\", {\n    className: progressBarClasses,\n    style: {\n      width: percent + \"%\"\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global['custom-tooltips'] = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var position = this._chart.canvas.getBoundingClientRect();\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}